/*{-{*/
#ifndef _TERRAESP_
#define _TERRAESP_


config 
	name : TerraEsp ,
	code:00.02.00 , 
	{
		esp : 1920,
	} 
do
/*
 * ATENTION: DO NOT use comments with '/**', always use only one star!
 * Current compiler has a bug to identifier this type of comments. 
 */
 
 
/*
 * Define constants
 */

// error_t
#define SUCCESS 0 
     // FAIL > 0
// Boolean
#define TRUE 1
#define FALSE 0
// Leds Constants
#define ON 1
#define OFF 0
#define TOGGLE 2
// Message
#define BROADCAST 0xffff
#define SEND_DATA_SIZE 16
// VM Error codes
#define E_DIVZERO 10 // Division by zero
#define E_IDXOVF  11 // Array index overflow
#define E_STKOVF  20 // Stack overflow -- fatal

// Pin mode
#define INPUT  0
#define OUTPUT  1
#define OUTPUT_HIGH  2

// GPIO_INT_TYPE
#define INT_DISABLE 0 
#define INT_POSEDGE 1 
#define INT_NEGEDGE 2 
#define INT_ANYEDGE 3 
//#define INT_LOLEVEL 4 // Very bad!!! Generates high frequency interrupts.
//#define INT_HILEVEL 5 // Very bad!!! Generates high frequency interrupts.


/*
 * GPIO Pin number - gpio_no
 *
 * NodeMCU DevKit: 	0, 1, 2, 3, 4, 5, 12, 13, 14, 15, 16 .. 9, 10, 
 * D1 Mini: 		0, 1, 2, 3, 4, 5, 12, 13, 14, 15 ,16
 * Esp-12E:			0, 1, 2, 3, 4, 5, 12, 13, 14, 15, 16 .. SPI-Flash[6, 7, 8, 9, 10, 11]
 */
#define GPIO0  0 
#define GPIO1  1
#define GPIO2  2
#define GPIO3  3
#define GPIO4  4
#define GPIO5  5

#define GPIO12 12
#define GPIO13 13
#define GPIO14 14
#define GPIO15 15
#define GPIO16 16



/*
 * Define custom registers
 */

	// radioMsg - Radio/Queue Data Message Register
	packet radioMsg with
		var ubyte type;
		var ushort source;
		var ushort target;
		var payload[20] data;
	end
	
	// TerraEsp local Output events
	output void 	REQ_ANA0		ubyte 7;
	output void 	REQ_CUSTOM_A	ubyte 20;
	output void 	REQ_CUSTOM		void 23;
	// TerraNet Custom Output events
	output void 	SEND			radioMsg 40;
	output void 	SEND_ACK		radioMsg 41;


	// TerraEsp Local Input events
	input ubyte 	ERROR 		 	ubyte 	0;
	input ubyte 	ERROR 			void	1;
	input ushort 	ANA0 			void	5;
	input ubyte 	GPIO_INT 		void	6;
	input ubyte 	CUSTOM_A		ubyte 	12;
	input ubyte 	CUSTOM_A 		void 	13;
	input ubyte 	CUSTOM 			void 	15;

	// TerraNet Custom Input events
	input ubyte 	SEND_DONE 		ubyte	40;
	input ubyte 	SEND_DONE 		void 	41;
	input ubyte 	SEND_DONE_ACK	ubyte	42;
	input ubyte 	SEND_DONE_ACK	void	43;
	input radioMsg	RECEIVE 		ubyte 	44;
	input radioMsg	RECEIVE 		void 	45;
	input ubyte 	Q_READY 		void 	46;

	// Terra basic functions
	function pure ushort getNodeId()		0;
	function pure ushort random()			1;
	function pure ubyte getMem(ushort)		2;
	function pure ulong getTime()			3;

	// TerraNet custom functions
	function nohold ubyte qPut(radioMsg) 	10;
	function nohold ubyte qGet(radioMsg) 	11;
	function pure ubyte qSize()				12;
	function pure ubyte qClear()			13;

	// TerraEsp custom functions
	function ubyte pinMode(ubyte,ubyte) 	20; //--> GPIO_OUTPUT_SET(gpio_no, bit_value),GPIO_DIS_OUTPUT(gpio_no)
	function ubyte pinWrite(ubyte,ubyte) 	21; //--> GPIO_OUTPUT_SET(gpio_no, bit_value)
	function ubyte pinRead(ubyte) 			22; //--> GPIO_INPUT_GET(gpio_no)                 gpio_no: 0..31
	function ubyte pinToggle(ubyte) 		23;
	
	function ubyte intEnable()				30; // --> ETS_GPIO_INTR_ATTACH(func, arg)???? + ETS_GPIO_INTR_ENABLE()
	function ubyte intDisable()				31; // --> ETS_GPIO_INTR_DISABLE()
	function ubyte intPinConfig(ubyte,ubyte)	32; // --> gpio_pin_intr_state_set(GPIO_ID_PIN(no),INT_TYPE);
	

// Determinist

		
end
#endif
/*}-}*/
