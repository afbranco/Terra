169 414 1 0 0 0 0 1 0 432
00 | 00000 0 track 0
00 | 00001 0
00 | 00002 0
00 | 00003 0
00 | 00004 0 track 1
00 | 00005 0
00 | 00006 0
00 | 00007 0
00 | 00008 0000 inEvt 030 : ACLM
00 | 00009 0001           : 01 gates
00 | 00010 0002
00 | 00011 0003
00 | 00012 0004 $ret:1, 
00 | 00013 0005 sensorReads:128, 
00 | 00014 0006 
00 | 00015 0007 
00 | 00016 0008 
00 | 00017 0009 
00 | 00018 0010 
00 | 00019 0011 
00 | 00020 0012 
00 | 00021 0013 
00 | 00022 0014 
00 | 00023 0015 
00 | 00024 0016 
00 | 00025 0017 
00 | 00026 0018 
00 | 00027 0019 
00 | 00028 0020 
00 | 00029 0021 
00 | 00030 0022 
00 | 00031 0023 
00 | 00032 0024 
00 | 00033 0025 
00 | 00034 0026 
00 | 00035 0027 
00 | 00036 0028 
00 | 00037 0029 
00 | 00038 0030 
00 | 00039 0031 
00 | 00040 0032 
00 | 00041 0033 
00 | 00042 0034 
00 | 00043 0035 
00 | 00044 0036 
00 | 00045 0037 
00 | 00046 0038 
00 | 00047 0039 
00 | 00048 0040 
00 | 00049 0041 
00 | 00050 0042 
00 | 00051 0043 
00 | 00052 0044 
00 | 00053 0045 
00 | 00054 0046 
00 | 00055 0047 
00 | 00056 0048 
00 | 00057 0049 
00 | 00058 0050 
00 | 00059 0051 
00 | 00060 0052 
00 | 00061 0053 
00 | 00062 0054 
00 | 00063 0055 
00 | 00064 0056 
00 | 00065 0057 
00 | 00066 0058 
00 | 00067 0059 
00 | 00068 0060 
00 | 00069 0061 
00 | 00070 0062 
00 | 00071 0063 
00 | 00072 0064 
00 | 00073 0065 
00 | 00074 0066 
00 | 00075 0067 
00 | 00076 0068 
00 | 00077 0069 
00 | 00078 0070 
00 | 00079 0071 
00 | 00080 0072 
00 | 00081 0073 
00 | 00082 0074 
00 | 00083 0075 
00 | 00084 0076 
00 | 00085 0077 
00 | 00086 0078 
00 | 00087 0079 
00 | 00088 0080 
00 | 00089 0081 
00 | 00090 0082 
00 | 00091 0083 
00 | 00092 0084 
00 | 00093 0085 
00 | 00094 0086 
00 | 00095 0087 
00 | 00096 0088 
00 | 00097 0089 
00 | 00098 0090 
00 | 00099 0091 
00 | 00100 0092 
00 | 00101 0093 
00 | 00102 0094 
00 | 00103 0095 
00 | 00104 0096 
00 | 00105 0097 
00 | 00106 0098 
00 | 00107 0099 
00 | 00108 0100 
00 | 00109 0101 
00 | 00110 0102 
00 | 00111 0103 
00 | 00112 0104 
00 | 00113 0105 
00 | 00114 0106 
00 | 00115 0107 
00 | 00116 0108 
00 | 00117 0109 
00 | 00118 0110 
00 | 00119 0111 
00 | 00120 0112 
00 | 00121 0113 
00 | 00122 0114 
00 | 00123 0115 
00 | 00124 0116 
00 | 00125 0117 
00 | 00126 0118 
00 | 00127 0119 
00 | 00128 0120 
00 | 00129 0121 
00 | 00130 0122 
00 | 00131 0123 
00 | 00132 0124 
00 | 00133 0125 
00 | 00134 0126 
00 | 00135 0127 
00 | 00136 0128 
00 | 00137 0129 
00 | 00138 0130 
00 | 00139 0131 
00 | 00140 0132 
00 | 00141 0133 retData:6, 
00 | 00142 0134 
00 | 00143 0135 
00 | 00144 0136 
00 | 00145 0137 
00 | 00146 0138 
00 | 00147 0139 count:1, 
00 | 00148 0140 k:1, 
00 | 00149 0141 sumdiffs:4, 
00 | 00150 0142 
00 | 00151 0143 
00 | 00152 0144 
00 | 00153 0145 diff:2, 
00 | 00154 0146 
00 | 00155 0147 stddev:2, 
00 | 00156 0148 
00 | 00157 0149 max:2, 
00 | 00158 0150 
00 | 00159 0151 min:2, 
00 | 00160 0152 
00 | 00161 0153 avg:2, 
00 | 00162 0154 
00 | 00163 0155 sum:4, 
00 | 00164 0156 
00 | 00165 0157 
00 | 00166 0158 
00 | 00167 0159 i:1, i:1, i:1, 
00 | 00168 0160 __i_0x8ce94e0:1, __i_0x8c44f60:1, __i_0x8cb5fe8:1, 
d1 | 00169 d1 set_c ushort 0 7681           | config gate ACLM with 1 await(s) - 0x1e01 = 7681
00 | 00170 00 
1e | 00171 1e 
01 | 00172 01 
c0 | 00173 c0 set_c ubyte 139 0             | count = 0
8b | 00174 8b 
00 | 00175 00 
24 | 00176 24 func 37                       | func aclm_setup
25 | 00177 25 
17 | 00178 17 popx                          | popx 
40 | 00179 40 push_c 1                      | push 1
01 | 00180 01 
24 | 00181 24 func 4                        | func trigFx
04 | 00182 04 
17 | 00183 17 popx                          | popx 
c0 | 00184 c0 set_c ubyte 159 0             | i = 0
9f | 00185 9f 
00 | 00186 00 
c0 | 00187 c0 set_c ubyte 160 64            | __i_0x8ce94e0 = 64
a0 | 00188 a0 
40 | 00189 40 
90 | 00190 90 push_v ubyte 160              | push __i_0x8ce94e0:ubyte
a0 | 00191 a0 
90 | 00192 90 push_v ubyte 159              | push i:ubyte
9f | 00193 9f 
11 | 00194 11 gte                           | gte
4f | 00195 4f ifelse 20 21                  | ifelse True_20 False_21
00 | 00196 .00 addr:200
c8 | 00197 .14 
00 | 00198 .00 addr:208
d0 | 00199 .15 
3d | 00200 3d tkins_z 1 6 12                | insert track Loop_out_12 tree 6
86 | 00201 86 
00 | 00202 .00 addr:228
e4 | 00203 .0c 
01 | 00204 01 end                           | end
39 | 00205 39 exec 22                       | goto  22
00 | 00206 .00 addr:190
be | 00207 .0a 
26 | 00208 26 outevt_z 30                   | emit REQ_ACLM
1e | 00209 1e 
d1 | 00210 d1 set_c ushort 2 19             | await ACLM[0]
02 | 00211 02 
00 | 00212 .00 addr:215
d7 | 00213 .13 
01 | 00214 01 end                           | end
32 | 00215 32 pusharr_v ushort 5 ubyte 159 64  | pusharr_v &sensorReads[i]
10 | 00216 10 
05 | 00217 05 
9f | 00218 9f 
40 | 00219 40 
34 | 00220 34 getextdt_e 2                  | getExtData stack len=2
02 | 00221 02 
40 | 00222 40 push_c 159                    | push &i
9f | 00223 9f 
60 | 00224 60 inc ubyte                     | inc ubyte
39 | 00225 39 exec 22                       | goto  22
00 | 00226 .00 addr:190
be | 00227 .0a 
48 | 00228 48 memclr 2 2                    | clear EXT gates for ACLM[0]
02 | 00229 02 
02 | 00230 02 
d1 | 00231 d1 set_c ushort 149 65535        | max = 65535
95 | 00232 95 
ff | 00233 ff 
ff | 00234 ff 
c1 | 00235 c1 set_c ushort 151 0            | min = 0
97 | 00236 97 
00 | 00237 00 
c6 | 00238 c6 set_c long 155 0              | sum = 0
9b | 00239 9b 
00 | 00240 00 
c0 | 00241 c0 set_c ubyte 159 0             | i = 0
9f | 00242 9f 
00 | 00243 00 
c0 | 00244 c0 set_c ubyte 160 64            | __i_0x8c44f60 = 64
a0 | 00245 a0 
40 | 00246 40 
90 | 00247 90 push_v ubyte 160              | push __i_0x8c44f60:ubyte
a0 | 00248 a0 
90 | 00249 90 push_v ubyte 159              | push i:ubyte
9f | 00250 9f 
11 | 00251 11 gte                           | gte
4f | 00252 4f ifelse 49 50                  | ifelse True_49 False_50
01 | 00253 .00 addr:257
01 | 00254 .31 
01 | 00255 .00 addr:265
09 | 00256 .32 
3d | 00257 3d tkins_z 1 6 27                | insert track Loop_out_27 tree 6
86 | 00258 86 
01 | 00259 .00 addr:334
4e | 00260 .1b 
01 | 00261 01 end                           | end
39 | 00262 39 exec 51                       | goto  51
00 | 00263 .00 addr:247
f7 | 00264 .19 
32 | 00265 32 pusharr_v ushort 5 ubyte 159 64  | pusharr_v &sensorReads[i]
10 | 00266 10 
05 | 00267 05 
9f | 00268 9f 
40 | 00269 40 
71 | 00270 71 deref ushort                  | deref ushort
96 | 00271 96 push_v long 155               | push sum:long
9b | 00272 9b 
06 | 00273 06 add                           | add
a6 | 00274 a6 pop long 155                  | pop sum
9b | 00275 9b 
32 | 00276 32 pusharr_v ushort 5 ubyte 159 64  | pusharr_v &sensorReads[i]
10 | 00277 10 
05 | 00278 05 
9f | 00279 9f 
40 | 00280 40 
71 | 00281 71 deref ushort                  | deref ushort
91 | 00282 91 push_v ushort 149             | push max:ushort
95 | 00283 95 
14 | 00284 14 lt                            | lt
4f | 00285 4f ifelse 40 41                  | ifelse True_40 EndIf_41
01 | 00286 .00 addr:290
22 | 00287 .28 
01 | 00288 .00 addr:302
2e | 00289 .29 
32 | 00290 32 pusharr_v ushort 5 ubyte 159 64  | pusharr_v &sensorReads[i]
10 | 00291 10 
05 | 00292 05 
9f | 00293 9f 
40 | 00294 40 
71 | 00295 71 deref ushort                  | deref ushort
40 | 00296 40 push_c 149                    | push_c &max:ushort
95 | 00297 95 
69 | 00298 69 set_e ushort                  | set (ushort)*(pop1) = pop2
39 | 00299 39 exec 41                       | goto  41
01 | 00300 .00 addr:302
2e | 00301 .29 
32 | 00302 32 pusharr_v ushort 5 ubyte 159 64  | pusharr_v &sensorReads[i]
10 | 00303 10 
05 | 00304 05 
9f | 00305 9f 
40 | 00306 40 
71 | 00307 71 deref ushort                  | deref ushort
91 | 00308 91 push_v ushort 151             | push min:ushort
97 | 00309 97 
13 | 00310 13 gt                            | gt
4f | 00311 4f ifelse 47 48                  | ifelse True_47 EndIf_48
01 | 00312 .00 addr:316
3c | 00313 .2f 
01 | 00314 .00 addr:328
48 | 00315 .30 
32 | 00316 32 pusharr_v ushort 5 ubyte 159 64  | pusharr_v &sensorReads[i]
10 | 00317 10 
05 | 00318 05 
9f | 00319 9f 
40 | 00320 40 
71 | 00321 71 deref ushort                  | deref ushort
40 | 00322 40 push_c 151                    | push_c &min:ushort
97 | 00323 97 
69 | 00324 69 set_e ushort                  | set (ushort)*(pop1) = pop2
39 | 00325 39 exec 48                       | goto  48
01 | 00326 .00 addr:328
48 | 00327 .30 
40 | 00328 40 push_c 159                    | push &i
9f | 00329 9f 
60 | 00330 60 inc ubyte                     | inc ubyte
39 | 00331 39 exec 51                       | goto  51
00 | 00332 .00 addr:247
f7 | 00333 .19 
40 | 00334 40 push_c 64                     | push 64
40 | 00335 40 
96 | 00336 96 push_v long 155               | push sum:long
9b | 00337 9b 
09 | 00338 09 div                           | div
a1 | 00339 a1 pop ushort 153                | pop avg
99 | 00340 99 
c2 | 00341 c2 set_c ulong 141 0             | sumdiffs = 0
8d | 00342 8d 
00 | 00343 00 
c0 | 00344 c0 set_c ubyte 159 0             | i = 0
9f | 00345 9f 
00 | 00346 00 
c0 | 00347 c0 set_c ubyte 160 64            | __i_0x8cb5fe8 = 64
a0 | 00348 a0 
40 | 00349 40 
90 | 00350 90 push_v ubyte 160              | push __i_0x8cb5fe8:ubyte
a0 | 00351 a0 
90 | 00352 90 push_v ubyte 159              | push i:ubyte
9f | 00353 9f 
11 | 00354 11 gte                           | gte
4f | 00355 4f ifelse 68 69                  | ifelse True_68 False_69
01 | 00356 .00 addr:360
68 | 00357 .44 
01 | 00358 .00 addr:368
70 | 00359 .45 
3d | 00360 3d tkins_z 1 6 57                | insert track Loop_out_57 tree 6
86 | 00361 86 
01 | 00362 .00 addr:395
8b | 00363 .39 
01 | 00364 01 end                           | end
39 | 00365 39 exec 70                       | goto  70
01 | 00366 .00 addr:350
5e | 00367 .37 
91 | 00368 91 push_v ushort 153             | push avg:ushort
99 | 00369 99 
32 | 00370 32 pusharr_v ushort 5 ubyte 159 64  | pusharr_v &sensorReads[i]
10 | 00371 10 
05 | 00372 05 
9f | 00373 9f 
40 | 00374 40 
71 | 00375 71 deref ushort                  | deref ushort
05 | 00376 05 sub                           | sub
a5 | 00377 a5 pop short 145                 | pop diff
91 | 00378 91 
95 | 00379 95 push_v short 145              | push diff:short
91 | 00380 91 
95 | 00381 95 push_v short 145              | push diff:short
91 | 00382 91 
08 | 00383 08 mult                          | mult
92 | 00384 92 push_v ulong 141              | push sumdiffs:ulong
8d | 00385 8d 
06 | 00386 06 add                           | add
a2 | 00387 a2 pop ulong 141                 | pop sumdiffs
8d | 00388 8d 
40 | 00389 40 push_c 159                    | push &i
9f | 00390 9f 
60 | 00391 60 inc ubyte                     | inc ubyte
39 | 00392 39 exec 70                       | goto  70
01 | 00393 .00 addr:350
5e | 00394 .37 
40 | 00395 40 push_c 64                     | push 64
40 | 00396 40 
92 | 00397 92 push_v ulong 141              | push sumdiffs:ulong
8d | 00398 8d 
09 | 00399 09 div                           | div
24 | 00400 24 func 36                       | func fast_sqrt
24 | 00401 24 
a1 | 00402 a1 pop ushort 147                | pop stddev
93 | 00403 93 
40 | 00404 40 push_c 2                      | push 2
02 | 00405 02 
24 | 00406 24 func 4                        | func trigFx
04 | 00407 04 
17 | 00408 17 popx                          | popx 
24 | 00409 24 func 39                       | func store
27 | 00410 27 
17 | 00411 17 popx                          | popx 
01 | 00412 01 end                           | end
01 | 00413 01 end                           | end
