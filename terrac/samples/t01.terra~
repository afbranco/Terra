config 10.1.2 do

regtype evtData with
	var byte [4] a;
	var short b;
end
	regtype radio with
		var ulong a;
		var ubyte b;
		var byte [16] data;
	end


	input short A 1;
	input radio RECEIVE 7;
	input evtData* AA11 11;
	output radio* AAAA 11;
	output ulong OYYYY 1;
	output ulong OZZZ 12;

	function ubyte* f0(radio) 1;
	function ubyte f1(evtData, byte, ulong, radio) 2;

	function casa* f2(void) 3;

end

var byte xx,yy;
event ushort ee;

  	await RECEIVE;
  // tests a program with a simulation in parallel
  par do
      // original program
      var short v = await A;
      loop do
emit ee(1);  
          await 10ms;
          v = v + 1;
      end
  
  with
      // input simulation
      async (xx,yy) do
		var ushort ww = 1;
		loop do
			inc xx;
			inc yy;
		end
      end
  with
  
      // input simulation
      async (xx,yy) do
		var ushort ww = 1;
		loop do
			inc xx;
			inc yy;
		end
      end
  with
    var ushort eex = await ee;

  end

var ulong zz = 1;
if xx==1 then
	var ushort zz1a = 1;
	var ushort zz1b = 1;
else
      // input simulation
      async (xx,yy) do
		var ushort ww = 1;
		loop afb1,1000 do
			inc xx;
			inc yy;
		end
      end
end

/*
par do
//  do 
	var byte a,b,c,d;
	var radio msg;
 	emit AAAA(&msg);
	msg = await RECEIVE;
//  finally
//	t1 = f0(msg);
//  end
with
	await 1ms;
end



/*
var byte x,z=0;
x = do
	return 10+z;
end;

par do
	loop do
		var radio msg1 = await RECEIVE;
		emit OYYYY(10);
	end
with
	loop do
		await 10s;
		emit AAAA(&msg);
	end
end 

var byte x1=0;
*/


