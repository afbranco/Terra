53 232 236 236 236 236 1 0 0 0 0 0 0
00 | 0000 0 track 0
00 | 0001 0
00 | 0002 0
00 | 0003 0
00 | 0004 0 track 1
00 | 0005 0
00 | 0006 0
00 | 0007 0
00 | 0008 0000 $ret:1, 
00 | 0009 0001 x2:2, 
00 | 0010 0002 
00 | 0011 0003 x5:2, 
00 | 0012 0004 
00 | 0013 0005 x1:1, 
00 | 0014 0006 x6:2, 
00 | 0015 0007 
00 | 0016 0008 x3:7, 
00 | 0017 0009 
00 | 0018 0010 
00 | 0019 0011 
00 | 0020 0012 
00 | 0021 0013 
00 | 0022 0014 
00 | 0023 0015 x4:10, 
00 | 0024 0016 
00 | 0025 0017 
00 | 0026 0018 
00 | 0027 0019 
00 | 0028 0020 
00 | 0029 0021 
00 | 0030 0022 
00 | 0031 0023 
00 | 0032 0024 
00 | 0033 0025 msg:16, 
00 | 0034 0026 
00 | 0035 0027 
00 | 0036 0028 
00 | 0037 0029 
00 | 0038 0030 
00 | 0039 0031 
00 | 0040 0032 
00 | 0041 0033 
00 | 0042 0034 
00 | 0043 0035 
00 | 0044 0036 
00 | 0045 0037 
00 | 0046 0038 
00 | 0047 0039 
00 | 0048 0040 
00 | 0049 0041 msg2:2, 
00 | 0050 0042 
00 | 0051 0043 umsg:2, 
00 | 0052 0044 
28 | 0053 28 push_c 5                      | push &x1
05 | 0054 05 
25 | 0055 25 poparr_v ushort 15 byte 5 5   | pop to x4*[x1]
00 | 0056 00 
0f | 0057 0f 
05 | 0058 05 
05 | 0059 05 
28 | 0060 28 push_c 1                      | push 1
01 | 0061 01 
38 | 0062 38 pushx_v byte 5                | push x1:byte
05 | 0063 05 
07 | 0064 07 add                           | add
3c | 0065 3c pusharr_v byte** 15 byte 5 5  | pusharr_v &x4[x1]
00 | 0066 00 
0f | 0067 0f 
05 | 0068 05 
05 | 0069 05 
40 | 0070 40 set_e byte                    | set (byte)*(pop1) = pop2
39 | 0071 39 pushx_v ushort 1              | push x2:ubyte*
01 | 0072 01 
94 | 0073 94 deref ubyte                   | deref_ *x2
20 | 0074 20 popx byte 5                   | pop x1
05 | 0075 05 
44 | 0076 44 setarr_vc byte 8 byte 5 7     | x3[x1] = 1
00 | 0077 00 
08 | 0078 08 
05 | 0079 05 
07 | 0080 07 
01 | 0081 01 
49 | 0082 49 setarr_vv ushort 15 byte 5 5 ushort 1  | x4*[x1] = x2
01 | 0083 01 
0f | 0084 0f 
05 | 0085 05 
05 | 0086 05 
01 | 0087 01 
f8 | 0088 f8 set_v long 37 5               | msg.x2 = x1
25 | 0089 25 
05 | 0090 05 
e0 | 0091 e0 set16_c byte 32 1             | msg.data[5] = 1
20 | 0092 20 
01 | 0093 01 
28 | 0094 28 push_c 1                      | push 1
01 | 0095 01 
39 | 0096 39 pushx_v ushort 41             | push msg2:test_t*
29 | 0097 29 
28 | 0098 28 push_c 2                      | push data offset
02 | 0099 02 
07 | 0100 07 add                           | add: reg addr + field offset
28 | 0101 28 push_c 1                      | push_c [1] offset
01 | 0102 01 
07 | 0103 07 add                           | add: array base addr + len position
40 | 0104 40 set_e byte                    | set (byte)*(pop1) = pop2
f4 | 0105 f4 set_v ushort 1 3              | x2(pointer) = x5(pointer)
01 | 0106 01 
03 | 0107 03 
f0 | 0108 f0 set_v byte 5 6                | x1 = x6
05 | 0109 05 
06 | 0110 06 
e0 | 0111 e0 set16_c byte 5 10             | x1 = 10
05 | 0112 05 
0a | 0113 0a 
29 | 0114 29 push_c 1000                   | push 1000
03 | 0115 03 
e8 | 0116 e8 
20 | 0117 20 popx byte 5                   | pop x1
05 | 0118 05 
e0 | 0119 e0 set16_c byte 9 11             | x3[1] = 11
09 | 0120 09 
0b | 0121 0b 
39 | 0122 39 pushx_v ushort 1              | push x2:ubyte*
01 | 0123 01 
94 | 0124 94 deref ubyte                   | deref_ *x2
20 | 0125 20 popx byte 5                   | pop x1
05 | 0126 05 
28 | 0127 28 push_c 27                     | push msg.data
1b | 0128 1b 
28 | 0129 28 push_c 43                     | push_c &umsg:ushort
2b | 0130 2b 
41 | 0131 41 set_e ushort                  | set (user_reg*)*(pop1) = pop2
29 | 0132 29 push_c 10000                  | push 10000
27 | 0133 27 
10 | 0134 10 
39 | 0135 39 pushx_v ushort 43             | push umsg:user_reg*
2b | 0136 2b 
28 | 0137 28 push_c 0                      | push id offset
00 | 0138 00 
07 | 0139 07 add                           | add: reg addr + field offset
40 | 0140 40 set_e ubyte                   | set (ubyte)*(pop1) = pop2
28 | 0141 28 push_c 25                     | push &msg
19 | 0142 19 
21 | 0143 21 popx ushort 41                | pop *msg2
29 | 0144 29 
f4 | 0145 f4 set_v ushort 1 21             | x2(pointer) = x4*[3](pointer)
01 | 0146 01 
15 | 0147 15 
f4 | 0148 f4 set_v ushort 21 1             | x4*[3](pointer) = x2(pointer)
15 | 0149 15 
01 | 0150 01 
28 | 0151 28 push_c 8                      | push_c &x3:byte*
08 | 0152 08 
38 | 0153 38 pushx_v byte 5                | push x1:byte
05 | 0154 05 
38 | 0155 38 pushx_v byte 5                | push x1:byte
05 | 0156 05 
07 | 0157 07 add                           | add
28 | 0158 28 push_c 7                      | push idx max 7
07 | 0159 07 
08 | 0160 08 mod                           | mod: limmit idx
28 | 0161 28 push_c 1                      | push var len byte
01 | 0162 01 
09 | 0163 09 mult                          | mult: varlen * idx
07 | 0164 07 add                           | add: array base addr + len position
94 | 0165 94 deref byte                    | deref byte
20 | 0166 20 popx byte 5                   | pop x1
05 | 0167 05 
39 | 0168 39 pushx_v ushort 41             | push msg2:test_t*
29 | 0169 29 
28 | 0170 28 push_c 2                      | push data offset
02 | 0171 02 
07 | 0172 07 add                           | add: reg addr + field offset
28 | 0173 28 push_c 27                     | push msg.data
1b | 0174 1b 
28 | 0175 28 push_c 2                      | push_c [2] offset
02 | 0176 02 
07 | 0177 07 add                           | add: array base addr + len position
28 | 0178 28 push_c 10                     | push idx max 10
0a | 0179 0a 
08 | 0180 08 mod                           | mod: limmit idx
28 | 0181 28 push_c 1                      | push var len byte
01 | 0182 01 
09 | 0183 09 mult                          | mult: varlen * idx
07 | 0184 07 add                           | add: array base addr + len position
94 | 0185 94 deref byte                    | deref byte
20 | 0186 20 popx byte 5                   | pop x1
05 | 0187 05 
39 | 0188 39 pushx_v ushort 1              | push x2:ubyte*
01 | 0189 01 
94 | 0190 94 deref ubyte                   | deref_ *x2
20 | 0191 20 popx byte 5                   | pop x1
05 | 0192 05 
28 | 0193 28 push_c 9                      | push_c &x3[1]
09 | 0194 09 
21 | 0195 21 popx ushort 3                 | pop *x5
03 | 0196 03 
28 | 0197 28 push_c 27                     | push msg.data
1b | 0198 1b 
28 | 0199 28 push_c 1                      | push_c [1] offset
01 | 0200 01 
07 | 0201 07 add                           | add: array base addr + len position
21 | 0202 21 popx ushort 3                 | pop *x5
03 | 0203 03 
28 | 0204 28 push_c 1                      | push 1
01 | 0205 01 
28 | 0206 28 push_c 25                     | push msg.x1
19 | 0207 19 
95 | 0208 95 deref short                   | deref short
07 | 0209 07 add                           | add
20 | 0210 20 popx byte 9                   | pop x3[1]
09 | 0211 09 
f0 | 0212 f0 set_v byte 5 9                | x1 = x3[1]
05 | 0213 05 
09 | 0214 09 
f0 | 0215 f0 set_v byte 5 37               | x1 = msg.x2
05 | 0216 05 
25 | 0217 25 
f8 | 0218 f8 set_v long 37 5               | msg.x2 = x1
25 | 0219 25 
05 | 0220 05 
28 | 0221 28 push_c 5                      | push 5
05 | 0222 05 
28 | 0223 28 push_c 25                     | push msg.x1
19 | 0224 19 
95 | 0225 95 deref short                   | deref short
07 | 0226 07 add                           | add
1b | 0227 1b outevt_e 1                    | emit LEDS
01 | 0228 01 
01 | 0229 01 end                           | end
01 | 0230 01 end                           | end program
01 | 0231 01 end                           | end
01 | 0232 01 L1(0x01) => 53 (0x35)
35 | 0233 35 
03 | 0234 03 L3(0x03) => 230 (0xe6)
e6 | 0235 e6 
