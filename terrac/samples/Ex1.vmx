206 886 7 6 0 0 48 6 48
00 | 00000 0 track 0
00 | 00001 0
00 | 00002 0
00 | 00003 0
00 | 00004 0 track 1
00 | 00005 0
00 | 00006 0
00 | 00007 0
00 | 00008 0 track 2
00 | 00009 0
00 | 00010 0
00 | 00011 0
00 | 00012 0 track 3
00 | 00013 0
00 | 00014 0
00 | 00015 0
00 | 00016 0 track 4
00 | 00017 0
00 | 00018 0
00 | 00019 0
00 | 00020 0 track 5
00 | 00021 0
00 | 00022 0
00 | 00023 0
00 | 00024 0 track 6
00 | 00025 0
00 | 00026 0
00 | 00027 0
00 | 00028 0 track 7
00 | 00029 0
00 | 00030 0
00 | 00031 0
00 | 00032 0000 wClock 0
00 | 00033 0001
00 | 00034 0002
00 | 00035 0003
00 | 00036 0004
00 | 00037 0005
00 | 00038 0006
00 | 00039 0007
00 | 00040 0008 wClock 1
00 | 00041 0009
00 | 00042 0010
00 | 00043 0011
00 | 00044 0012
00 | 00045 0013
00 | 00046 0014
00 | 00047 0015
00 | 00048 0016 wClock 2
00 | 00049 0017
00 | 00050 0018
00 | 00051 0019
00 | 00052 0020
00 | 00053 0021
00 | 00054 0022
00 | 00055 0023
00 | 00056 0024 wClock 3
00 | 00057 0025
00 | 00058 0026
00 | 00059 0027
00 | 00060 0028
00 | 00061 0029
00 | 00062 0030
00 | 00063 0031
00 | 00064 0032 wClock 4
00 | 00065 0033
00 | 00066 0034
00 | 00067 0035
00 | 00068 0036
00 | 00069 0037
00 | 00070 0038
00 | 00071 0039
00 | 00072 0040 wClock 5
00 | 00073 0041
00 | 00074 0042
00 | 00075 0043
00 | 00076 0044
00 | 00077 0045
00 | 00078 0046
00 | 00079 0047
00 | 00080 0048 inEvt 005 : TEMP
00 | 00081 0049           : 01 gates
00 | 00082 0050
00 | 00083 0051
00 | 00084 0052 inEvt 013 : CUSTOM_A
00 | 00085 0053           : 01 gates
00 | 00086 0054
00 | 00087 0055
00 | 00088 0056 inEvt 040 : SEND_DONE()
00 | 00089 0057           : 01 gates
00 | 00090 0058
00 | 00091 0059
00 | 00092 0060
00 | 00093 0061 inEvt 042 : SEND_DONE_ACK()
00 | 00094 0062           : 01 gates
00 | 00095 0063
00 | 00096 0064
00 | 00097 0065
00 | 00098 0066 inEvt 044 : RECEIVE()
00 | 00099 0067           : 04 gates
00 | 00100 0068
00 | 00101 0069
00 | 00102 0070
00 | 00103 0071
00 | 00104 0072
00 | 00105 0073
00 | 00106 0074
00 | 00107 0075
00 | 00108 0076
00 | 00109 0077
00 | 00110 0078
00 | 00111 0079
00 | 00112 0080 inEvt 046 : Q_READY
00 | 00113 0081           : 01 gates
00 | 00114 0082
00 | 00115 0083
00 | 00116 0084 $ret:1, 
00 | 00117 0085 nodeId:2, 
00 | 00118 0086 
00 | 00119 0087 baseNode:2, 
00 | 00120 0088 
00 | 00121 0089 stat:1, 
00 | 00122 0090 hop:1, 
00 | 00123 0091 father:2, 
00 | 00124 0092 
00 | 00125 0093 seqReq:2, 
00 | 00126 0094 
00 | 00127 0095 seqData:1, 
00 | 00128 0096 reqTopoBlind:1, 
00 | 00129 0097 msgTopo:25, 
00 | 00130 0098 
00 | 00131 0099 
00 | 00132 0100 
00 | 00133 0101 
00 | 00134 0102 
00 | 00135 0103 
00 | 00136 0104 
00 | 00137 0105 
00 | 00138 0106 
00 | 00139 0107 
00 | 00140 0108 
00 | 00141 0109 
00 | 00142 0110 
00 | 00143 0111 
00 | 00144 0112 
00 | 00145 0113 
00 | 00146 0114 
00 | 00147 0115 
00 | 00148 0116 
00 | 00149 0117 
00 | 00150 0118 
00 | 00151 0119 
00 | 00152 0120 
00 | 00153 0121 
00 | 00154 0122 msgRadio:25, 
00 | 00155 0123 
00 | 00156 0124 
00 | 00157 0125 
00 | 00158 0126 
00 | 00159 0127 
00 | 00160 0128 
00 | 00161 0129 
00 | 00162 0130 
00 | 00163 0131 
00 | 00164 0132 
00 | 00165 0133 
00 | 00166 0134 
00 | 00167 0135 
00 | 00168 0136 
00 | 00169 0137 
00 | 00170 0138 
00 | 00171 0139 
00 | 00172 0140 
00 | 00173 0141 
00 | 00174 0142 
00 | 00175 0143 
00 | 00176 0144 
00 | 00177 0145 
00 | 00178 0146 
00 | 00179 0147 msgData:25, 
00 | 00180 0148 
00 | 00181 0149 
00 | 00182 0150 
00 | 00183 0151 
00 | 00184 0152 
00 | 00185 0153 
00 | 00186 0154 
00 | 00187 0155 
00 | 00188 0156 
00 | 00189 0157 
00 | 00190 0158 
00 | 00191 0159 
00 | 00192 0160 
00 | 00193 0161 
00 | 00194 0162 
00 | 00195 0163 
00 | 00196 0164 
00 | 00197 0165 
00 | 00198 0166 
00 | 00199 0167 
00 | 00200 0168 
00 | 00201 0169 
00 | 00202 0170 
00 | 00203 0171 
00 | 00204 0172 ack:1, 
00 | 00205 0173 reply:1, 
d1 | 00206 d1 set_c ushort 48 1281          | config gate TEMP with 1 await(s) - 0x0501 = 1281
30 | 00207 30 
05 | 00208 05 
01 | 00209 01 
d1 | 00210 d1 set_c ushort 52 3329          | config gate CUSTOM_A with 1 await(s) - 0x0d01 = 3329
34 | 00211 34 
0d | 00212 0d 
01 | 00213 01 
d1 | 00214 d1 set_c ushort 56 10369         | config gate SEND_DONE() with 1 await(s) - 0x2881 = 10369
38 | 00215 38 
28 | 00216 28 
81 | 00217 81 
d1 | 00218 d1 set_c ushort 61 10881         | config gate SEND_DONE_ACK() with 1 await(s) - 0x2a81 = 10881
3d | 00219 3d 
2a | 00220 2a 
81 | 00221 81 
d1 | 00222 d1 set_c ushort 66 11396         | config gate RECEIVE() with 4 await(s) - 0x2c84 = 11396
42 | 00223 42 
2c | 00224 2c 
84 | 00225 84 
d1 | 00226 d1 set_c ushort 80 11777         | config gate Q_READY with 1 await(s) - 0x2e01 = 11777
50 | 00227 50 
2e | 00228 2e 
01 | 00229 01 
24 | 00230 24 func 0                        | func getNodeId
00 | 00231 00 
a1 | 00232 a1 pop ushort 85                 | pop nodeId
55 | 00233 55 
c1 | 00234 c1 set_c ushort 87 2             | baseNode = 2
57 | 00235 57 
02 | 00236 02 
40 | 00237 40 push_c 10                     | push 10
0a | 00238 0a 
91 | 00239 91 push_v ushort 85              | push nodeId:ushort
55 | 00240 55 
13 | 00241 13 gt                            | gt
4f | 00242 4f ifelse 8 9                    | ifelse True_8 EndIf_9
00 | 00243 .00 addr:247
f7 | 00244 .08 
00 | 00245 .00 addr:253
fd | 00246 .09 
c1 | 00247 c1 set_c ushort 87 11            | baseNode = 11
57 | 00248 57 
0b | 00249 0b 
39 | 00250 39 exec 9                        | goto  9
00 | 00251 .00 addr:253
fd | 00252 .09 
d1 | 00253 d1 set_c ushort 91 0xfffe        | father = 0xfffe
5b | 00254 5b 
ff | 00255 ff 
fe | 00256 fe 
c1 | 00257 c1 set_c ushort 93 0             | seqReq = 0
5d | 00258 5d 
00 | 00259 00 
c0 | 00260 c0 set_c ubyte 95 0              | seqData = 0
5f | 00261 5f 
00 | 00262 00 
c0 | 00263 c0 set_c ubyte 96 0              | reqTopoBlind = 0
60 | 00264 60 
00 | 00265 00 
c0 | 00266 c0 set_c ubyte 147 2             | msgData.type = 2
93 | 00267 93 
02 | 00268 02 
2a | 00269 2a set_v ushort 148 ushort 85    | msgData.source = nodeId
11 | 00270 11 
94 | 00271 94 
55 | 00272 55 
2a | 00273 2a set_v ushort 160 ushort 85    | msgData.d16_3 = nodeId
11 | 00274 11 
a0 | 00275 a0 
55 | 00276 55 
2a | 00277 2a set_v ushort 98 ushort 85     | msgTopo.source = nodeId
11 | 00278 11 
62 | 00279 62 
55 | 00280 55 
91 | 00281 91 push_v ushort 87              | push baseNode:ushort
57 | 00282 57 
91 | 00283 91 push_v ushort 85              | push nodeId:ushort
55 | 00284 55 
0f | 00285 0f eq                            | eq
4f | 00286 4f ifelse 19 20                  | ifelse True_19 EndIf_20
01 | 00287 .00 addr:291
23 | 00288 .13 
01 | 00289 .00 addr:300
2c | 00290 .14 
c1 | 00291 c1 set_c ushort 91 1             | father = 1
5b | 00292 5b 
01 | 00293 01 
c1 | 00294 c1 set_c ushort 93 1             | seqReq = 1
5d | 00295 5d 
01 | 00296 01 
39 | 00297 39 exec 20                       | goto  20
01 | 00298 .00 addr:300
2c | 00299 .14 
89 | 00300 89 tkins_max 0 21                | insert track ParEver_sub_1_21
01 | 00301 .00 addr:316
3c | 00302 .15 
89 | 00303 89 tkins_max 0 22                | insert track ParEver_sub_2_22
01 | 00304 .00 addr:441
b9 | 00305 .16 
89 | 00306 89 tkins_max 0 23                | insert track ParEver_sub_3_23
01 | 00307 .00 addr:481
e1 | 00308 .17 
89 | 00309 89 tkins_max 0 24                | insert track ParEver_sub_4_24
02 | 00310 .00 addr:655
8f | 00311 .18 
89 | 00312 89 tkins_max 0 25                | insert track ParEver_sub_5_25
02 | 00313 .00 addr:712
c8 | 00314 .19 
01 | 00315 01 end                           | end
29 | 00316 29 clken_c 0 2000 29             | clock enable Awake_2000_29 2000msec
03 | 00317 03 
00 | 00318 00 
07 | 00319 07 
d0 | 00320 d0 
01 | 00321 .00 addr:324
44 | 00322 .1d 
01 | 00323 01 end                           | end
58 | 00324 58 outevt_c 20 1                 | emit REQ_CUSTOM_A len=1 const=1
14 | 00325 14 
01 | 00326 01 
89 | 00327 89 tkins_max 0 35                | insert track ParOr_sub_1_35
01 | 00328 .00 addr:334
4e | 00329 .23 
89 | 00330 89 tkins_max 0 36                | insert track ParOr_sub_2_36
01 | 00331 .00 addr:346
5a | 00332 .24 
01 | 00333 01 end                           | end
29 | 00334 29 clken_c 1 30000 38            | clock enable Awake_30000_38 30000msec
03 | 00335 03 
01 | 00336 01 
75 | 00337 75 
30 | 00338 30 
01 | 00339 .00 addr:342
56 | 00340 .26 
01 | 00341 01 end                           | end
89 | 00342 89 tkins_max 0 37                | insert track ParOr_out_37
01 | 00343 .00 addr:425
a9 | 00344 .25 
01 | 00345 01 end                           | end
29 | 00346 29 clken_c 2 10000 39            | clock enable Awake_10000_39 10000msec
03 | 00347 03 
02 | 00348 02 
27 | 00349 27 
10 | 00350 10 
01 | 00351 .00 addr:354
62 | 00352 .27 
01 | 00353 01 end                           | end
26 | 00354 26 outevt_z 9                    | emit REQ_TEMP
09 | 00355 09 
d1 | 00356 d1 set_c ushort 50 42            | await TEMP[0]
32 | 00357 32 
01 | 00358 .00 addr:361
69 | 00359 .2a 
01 | 00360 01 end                           | end
40 | 00361 40 push_c 156                    | push msgData.d16_1
9c | 00362 9c 
34 | 00363 34 getextdt_e 2                  | getExtData stack len=2
02 | 00364 02 
41 | 00365 41 push_c 0xfffe                 | push 0xfffe
ff | 00366 ff 
fe | 00367 fe 
91 | 00368 91 push_v ushort 91              | push father:ushort
5b | 00369 5b 
10 | 00370 10 neq                           | neq
4f | 00371 4f ifelse 55 56                  | ifelse True_55 False_56
01 | 00372 .00 addr:376
78 | 00373 .37 
01 | 00374 .00 addr:417
a1 | 00375 .38 
2a | 00376 2a set_v ushort 150 ushort 91    | msgData.target = father
11 | 00377 11 
96 | 00378 96 
5b | 00379 5b 
40 | 00380 40 push_c 95                     | push &seqData
5f | 00381 5f 
60 | 00382 60 inc ubyte                     | inc ubyte
90 | 00383 90 push_v ubyte 95               | push seqData:ubyte
5f | 00384 5f 
25 | 00385 25 outevt_e 5                    | emit LEDS
05 | 00386 05 
2a | 00387 2a set_v ubyte 154 ubyte 95      | msgData.d8_3 = seqData
00 | 00388 00 
9a | 00389 9a 
5f | 00390 5f 
2a | 00391 2a set_v ushort 162 ushort 91    | msgData.d16_4 = father
11 | 00392 11 
a2 | 00393 a2 
5b | 00394 5b 
2a | 00395 2a set_v ubyte 153 ubyte 96      | msgData.d8_2 = reqTopoBlind
00 | 00396 00 
99 | 00397 99 
60 | 00398 60 
40 | 00399 40 push_c 100                    | push 100
64 | 00400 64 
91 | 00401 91 push_v ushort 85              | push nodeId:ushort
55 | 00402 55 
08 | 00403 08 mult                          | mult
27 | 00404 27 clken_e 3 0 52                | clock enable Awake_exp_52 (stack)ms
01 | 00405 01 
03 | 00406 03 
01 | 00407 .00 addr:410
9a | 00408 .34 
01 | 00409 01 end                           | end
40 | 00410 40 push_c 147                    | push_c &msgData:usrMsg2_t
93 | 00411 93 
24 | 00412 24 func 10                       | func qPut
0a | 00413 0a 
a0 | 00414 a0 pop ubyte 89                  | pop stat
59 | 00415 59 
01 | 00416 01 end                           | end
58 | 00417 58 outevt_c 20 1                 | emit REQ_CUSTOM_A len=1 const=1
14 | 00418 14 
01 | 00419 01 
01 | 00420 01 end                           | end
89 | 00421 89 tkins_max 0 37                | insert track ParOr_out_37
01 | 00422 .00 addr:425
a9 | 00423 .25 
01 | 00424 01 end                           | end
48 | 00425 48 memclr 8 24                   | clear WClocks gates from 1 to 4
08 | 00426 08 
18 | 00427 18 
48 | 00428 48 memclr 50 2                   | clear EXT gates for TEMP
32 | 00429 32 
02 | 00430 02 
39 | 00431 39 exec 32                       | goto  32
01 | 00432 .00 addr:327
47 | 00433 .20 
48 | 00434 48 memclr 8 24                   | clear WClocks gates from 1 to 4
08 | 00435 08 
18 | 00436 18 
48 | 00437 48 memclr 50 2                   | clear EXT gates for TEMP
32 | 00438 32 
02 | 00439 02 
01 | 00440 01 end                           | end
40 | 00441 40 push_c 2                      | push 2
02 | 00442 02 
a0 | 00443 a0 pop ubyte 68                  | evt RECEIVE() auxId = pop
44 | 00444 44 
d1 | 00445 d1 set_c ushort 69 61            | await RECEIVE()[0]
45 | 00446 45 
01 | 00447 .00 addr:450
c2 | 00448 .3d 
01 | 00449 01 end                           | end
5c | 00450 5c getextdt_v 97 25              | getExtData msgTopo 25
61 | 00451 61 
19 | 00452 19 
41 | 00453 41 push_c 0xfffe                 | push 0xfffe
ff | 00454 ff 
fe | 00455 fe 
91 | 00456 91 push_v ushort 91              | push father:ushort
5b | 00457 5b 
10 | 00458 10 neq                           | neq
4f | 00459 4f ifelse 64 65                  | ifelse True_64 EndIf_65
01 | 00460 .00 addr:464
d0 | 00461 .40 
01 | 00462 .00 addr:441
b9 | 00463 .3a 
2a | 00464 2a set_v ushort 100 ushort 91    | msgTopo.target = father
11 | 00465 11 
64 | 00466 64 
5b | 00467 5b 
40 | 00468 40 push_c 97                     | push_c &msgTopo:usrMsg2_t
61 | 00469 61 
24 | 00470 24 func 10                       | func qPut
0a | 00471 0a 
a0 | 00472 a0 pop ubyte 89                  | pop stat
59 | 00473 59 
39 | 00474 39 exec 65                       | goto  65
01 | 00475 .00 addr:441
b9 | 00476 .3a 
48 | 00477 48 memclr 68 2                   | clear EXT gates for RECEIVE()
44 | 00478 44 
02 | 00479 02 
01 | 00480 01 end                           | end
91 | 00481 91 push_v ushort 87              | push baseNode:ushort
57 | 00482 57 
91 | 00483 91 push_v ushort 85              | push nodeId:ushort
55 | 00484 55 
10 | 00485 10 neq                           | neq
4f | 00486 4f ifelse 101 102                | ifelse True_101 False_102
01 | 00487 .00 addr:491
eb | 00488 .65 
02 | 00489 .00 addr:601
59 | 00490 .66 
89 | 00491 89 tkins_max 0 68                | insert track ParEver_sub_1_68
01 | 00492 .00 addr:498
f2 | 00493 .44 
89 | 00494 89 tkins_max 0 69                | insert track ParEver_sub_2_69
02 | 00495 .00 addr:555
2b | 00496 .45 
01 | 00497 01 end                           | end
40 | 00498 40 push_c 1                      | push 1
01 | 00499 01 
a0 | 00500 a0 pop ubyte 71                  | evt RECEIVE() auxId = pop
47 | 00501 47 
d1 | 00502 d1 set_c ushort 72 76            | await RECEIVE()[1]
48 | 00503 48 
01 | 00504 .00 addr:507
fb | 00505 .4c 
01 | 00506 01 end                           | end
5c | 00507 5c getextdt_v 97 25              | getExtData msgTopo 25
61 | 00508 61 
19 | 00509 19 
91 | 00510 91 push_v ushort 93              | push seqReq:ushort
5d | 00511 5d 
91 | 00512 91 push_v ushort 108             | push msgTopo.d16_2 [Optm:: push_c addr + deref]
6c | 00513 6c 
13 | 00514 13 gt                            | gt
4f | 00515 4f ifelse 83 84                  | ifelse True_83 EndIf_84
02 | 00516 .00 addr:520
08 | 00517 .53 
01 | 00518 .00 addr:498
f2 | 00519 .49 
c0 | 00520 c0 set_c ubyte 96 0              | reqTopoBlind = 0
60 | 00521 60 
00 | 00522 00 
2a | 00523 2a set_v ushort 93 ushort 108    | seqReq = msgTopo.d16_2
11 | 00524 11 
5d | 00525 5d 
6c | 00526 6c 
2a | 00527 2a set_v ushort 91 ushort 98     | father = msgTopo.source
11 | 00528 11 
5b | 00529 5b 
62 | 00530 62 
40 | 00531 40 push_c 103                    | push msgTopo.d8_2
67 | 00532 67 
60 | 00533 60 inc ubyte                     | inc ubyte
2a | 00534 2a set_v ubyte 90 ubyte 103      | hop = msgTopo.d8_2
00 | 00535 00 
5a | 00536 5a 
67 | 00537 67 
2a | 00538 2a set_v ushort 98 ushort 85     | msgTopo.source = nodeId
11 | 00539 11 
62 | 00540 62 
55 | 00541 55 
40 | 00542 40 push_c 97                     | push_c &msgTopo:usrMsg2_t
61 | 00543 61 
24 | 00544 24 func 10                       | func qPut
0a | 00545 0a 
a0 | 00546 a0 pop ubyte 89                  | pop stat
59 | 00547 59 
39 | 00548 39 exec 84                       | goto  84
01 | 00549 .00 addr:498
f2 | 00550 .49 
48 | 00551 48 memclr 68 2                   | clear EXT gates for RECEIVE()
44 | 00552 44 
02 | 00553 02 
01 | 00554 01 end                           | end
40 | 00555 40 push_c 3                      | push 3
03 | 00556 03 
a0 | 00557 a0 pop ubyte 74                  | evt RECEIVE() auxId = pop
4a | 00558 4a 
d1 | 00559 d1 set_c ushort 75 88            | await RECEIVE()[2]
4b | 00560 4b 
02 | 00561 .00 addr:564
34 | 00562 .58 
01 | 00563 01 end                           | end
5c | 00564 5c getextdt_v 97 25              | getExtData msgTopo 25
61 | 00565 61 
19 | 00566 19 
40 | 00567 40 push_c 0                      | push 0
00 | 00568 00 
90 | 00569 90 push_v ubyte 96               | push reqTopoBlind:ubyte
60 | 00570 60 
0f | 00571 0f eq                            | eq
41 | 00572 41 push_c 0xfffe                 | push 0xfffe
ff | 00573 ff 
fe | 00574 fe 
91 | 00575 91 push_v ushort 91              | push father:ushort
5b | 00576 5b 
10 | 00577 10 neq                           | neq
16 | 00578 16 land                          | land
4f | 00579 4f ifelse 92 93                  | ifelse True_92 EndIf_93
02 | 00580 .00 addr:584
48 | 00581 .5c 
02 | 00582 .00 addr:555
2b | 00583 .55 
2a | 00584 2a set_v ushort 100 ushort 91    | msgTopo.target = father
11 | 00585 11 
64 | 00586 64 
5b | 00587 5b 
40 | 00588 40 push_c 97                     | push_c &msgTopo:usrMsg2_t
61 | 00589 61 
24 | 00590 24 func 10                       | func qPut
0a | 00591 0a 
a0 | 00592 a0 pop ubyte 89                  | pop stat
59 | 00593 59 
39 | 00594 39 exec 93                       | goto  93
02 | 00595 .00 addr:555
2b | 00596 .55 
48 | 00597 48 memclr 68 2                   | clear EXT gates for RECEIVE()
44 | 00598 44 
02 | 00599 02 
01 | 00600 01 end                           | end
40 | 00601 40 push_c 3                      | push 3
03 | 00602 03 
a0 | 00603 a0 pop ubyte 77                  | evt RECEIVE() auxId = pop
4d | 00604 4d 
d1 | 00605 d1 set_c ushort 78 97            | await RECEIVE()[3]
4e | 00606 4e 
02 | 00607 .00 addr:610
62 | 00608 .61 
01 | 00609 01 end                           | end
5c | 00610 5c getextdt_v 97 25              | getExtData msgTopo 25
61 | 00611 61 
19 | 00612 19 
c0 | 00613 c0 set_c ubyte 97 1              | msgTopo.type = 1
61 | 00614 61 
01 | 00615 01 
2a | 00616 2a set_v ushort 98 ushort 85     | msgTopo.source = nodeId
11 | 00617 11 
62 | 00618 62 
55 | 00619 55 
d1 | 00620 d1 set_c ushort 100 0xffff       | msgTopo.target = 0xffff
64 | 00621 64 
ff | 00622 ff 
ff | 00623 ff 
c0 | 00624 c0 set_c ubyte 103 0             | msgTopo.d8_2 = 0
67 | 00625 67 
00 | 00626 00 
40 | 00627 40 push_c 93                     | push &seqReq
5d | 00628 5d 
61 | 00629 61 inc ushort                    | inc ushort
2a | 00630 2a set_v ushort 108 ushort 93    | msgTopo.d16_2 = seqReq
11 | 00631 11 
6c | 00632 6c 
5d | 00633 5d 
40 | 00634 40 push_c 97                     | push_c &msgTopo:usrMsg2_t
61 | 00635 61 
24 | 00636 24 func 10                       | func qPut
0a | 00637 0a 
a0 | 00638 a0 pop ubyte 89                  | pop stat
59 | 00639 59 
29 | 00640 29 clken_c 4 2000 100            | clock enable Awake_2000_100 2000msec
03 | 00641 03 
04 | 00642 04 
07 | 00643 07 
d0 | 00644 d0 
02 | 00645 .00 addr:601
59 | 00646 .5e 
01 | 00647 01 end                           | end
48 | 00648 48 memclr 32 8                   | clear WClocks gates from 4 to 5
20 | 00649 20 
08 | 00650 08 
48 | 00651 48 memclr 68 2                   | clear EXT gates for RECEIVE()
44 | 00652 44 
02 | 00653 02 
01 | 00654 01 end                           | end
91 | 00655 91 push_v ushort 87              | push baseNode:ushort
57 | 00656 57 
91 | 00657 91 push_v ushort 85              | push nodeId:ushort
55 | 00658 55 
10 | 00659 10 neq                           | neq
4f | 00660 4f ifelse 115 116                | ifelse True_115 EndIf_116
02 | 00661 .00 addr:665
99 | 00662 .73 
02 | 00663 .00 addr:711
c7 | 00664 .74 
d1 | 00665 d1 set_c ushort 54 109           | await CUSTOM_A[0]
36 | 00666 36 
02 | 00667 .00 addr:670
9e | 00668 .6d 
01 | 00669 01 end                           | end
41 | 00670 41 push_c 0xfffe                 | push 0xfffe
ff | 00671 ff 
fe | 00672 fe 
91 | 00673 91 push_v ushort 91              | push father:ushort
5b | 00674 5b 
0f | 00675 0f eq                            | eq
4f | 00676 4f ifelse 113 114                | ifelse True_113 EndIf_114
02 | 00677 .00 addr:681
a9 | 00678 .71 
02 | 00679 .00 addr:665
99 | 00680 .6a 
c0 | 00681 c0 set_c ubyte 97 3              | msgTopo.type = 3
61 | 00682 61 
03 | 00683 03 
2a | 00684 2a set_v ushort 98 ushort 85     | msgTopo.source = nodeId
11 | 00685 11 
62 | 00686 62 
55 | 00687 55 
d1 | 00688 d1 set_c ushort 100 0xffff       | msgTopo.target = 0xffff
64 | 00689 64 
ff | 00690 ff 
ff | 00691 ff 
40 | 00692 40 push_c 93                     | push &seqReq
5d | 00693 5d 
61 | 00694 61 inc ushort                    | inc ushort
2a | 00695 2a set_v ushort 108 ushort 93    | msgTopo.d16_2 = seqReq
11 | 00696 11 
6c | 00697 6c 
5d | 00698 5d 
40 | 00699 40 push_c 97                     | push_c &msgTopo:usrMsg2_t
61 | 00700 61 
24 | 00701 24 func 10                       | func qPut
0a | 00702 0a 
a0 | 00703 a0 pop ubyte 89                  | pop stat
59 | 00704 59 
39 | 00705 39 exec 114                      | goto  114
02 | 00706 .00 addr:665
99 | 00707 .6a 
48 | 00708 48 memclr 54 2                   | clear EXT gates for CUSTOM_A
36 | 00709 36 
02 | 00710 02 
01 | 00711 01 end                           | end
c0 | 00712 c0 set_c ubyte 172 1             | ack = 1
ac | 00713 ac 
01 | 00714 01 
c0 | 00715 c0 set_c ubyte 173 0             | reply = 0
ad | 00716 ad 
00 | 00717 00 
d1 | 00718 d1 set_c ushort 82 122           | await Q_READY[0]
52 | 00719 52 
02 | 00720 .00 addr:723
d3 | 00721 .7a 
01 | 00722 01 end                           | end
40 | 00723 40 push_c 0                      | push 0
00 | 00724 00 
24 | 00725 24 func 12                       | func qSize
0c | 00726 0c 
13 | 00727 13 gt                            | gt
4f | 00728 4f ifelse 154 155                | ifelse True_154 False_155
02 | 00729 .00 addr:733
dd | 00730 .9a 
03 | 00731 .00 addr:849
51 | 00732 .9b 
c0 | 00733 c0 set_c ubyte 173 0             | reply = 0
ad | 00734 ad 
00 | 00735 00 
40 | 00736 40 push_c 122                    | push_c &msgRadio:usrMsg2_t
7a | 00737 7a 
24 | 00738 24 func 11                       | func qGet
0b | 00739 0b 
a0 | 00740 a0 pop ubyte 89                  | pop stat
59 | 00741 59 
41 | 00742 41 push_c 0xffff                 | push 0xffff
ff | 00743 ff 
ff | 00744 ff 
91 | 00745 91 push_v ushort 125             | push msgRadio.target [Optm:: push_c addr + deref]
7d | 00746 7d 
0f | 00747 0f eq                            | eq
4f | 00748 4f ifelse 151 152                | ifelse True_151 False_152
02 | 00749 .00 addr:753
f1 | 00750 .97 
02 | 00751 .00 addr:765
fd | 00752 .98 
b1 | 00753 b1 outevt_v 40 122               | emit SEND len=25 var=msgRadio
28 | 00754 28 
7a | 00755 7a 
90 | 00756 90 push_v ubyte 122              | push msgRadio.type [Optm:: push_c addr + deref]
7a | 00757 7a 
a0 | 00758 a0 pop ubyte 58                  | evt SEND_DONE() auxId = pop
3a | 00759 3a 
d1 | 00760 d1 set_c ushort 59 131           | await SEND_DONE()[0]
3b | 00761 3b 
02 | 00762 .00 addr:723
d3 | 00763 .7b 
01 | 00764 01 end                           | end
90 | 00765 90 push_v ubyte 173              | push reply:ubyte
ad | 00766 ad 
90 | 00767 90 push_v ubyte 127              | push msgRadio.d8_1 [Optm:: push_c addr + deref]
7f | 00768 7f 
06 | 00769 06 add                           | add
a0 | 00770 a0 pop ubyte 127                 | pop msgRadio.d8_1
7f | 00771 7f 
b1 | 00772 b1 outevt_v 41 122               | emit SEND_ACK len=25 var=msgRadio
29 | 00773 29 
7a | 00774 7a 
90 | 00775 90 push_v ubyte 122              | push msgRadio.type [Optm:: push_c addr + deref]
7a | 00776 7a 
a0 | 00777 a0 pop ubyte 63                  | evt SEND_DONE_ACK() auxId = pop
3f | 00778 3f 
d1 | 00779 d1 set_c ushort 64 141           | await SEND_DONE_ACK()[0]
40 | 00780 40 
03 | 00781 .00 addr:784
10 | 00782 .8d 
01 | 00783 01 end                           | end
5c | 00784 5c getextdt_v 172 1              | getExtData ack 1
ac | 00785 ac 
01 | 00786 01 
40 | 00787 40 push_c 173                    | push &reply
ad | 00788 ad 
60 | 00789 60 inc ubyte                     | inc ubyte
40 | 00790 40 push_c 20                     | push 20
14 | 00791 14 
90 | 00792 90 push_v ubyte 173              | push reply:ubyte
ad | 00793 ad 
13 | 00794 13 gt                            | gt
4f | 00795 4f ifelse 145 146                | ifelse True_145 EndIf_146
03 | 00796 .00 addr:800
20 | 00797 .91 
03 | 00798 .00 addr:815
2f | 00799 .92 
d1 | 00800 d1 set_c ushort 91 0xfffe        | father = 0xfffe
5b | 00801 5b 
ff | 00802 ff 
fe | 00803 fe 
58 | 00804 58 outevt_c 20 1                 | emit REQ_CUSTOM_A len=1 const=1
14 | 00805 14 
01 | 00806 01 
3d | 00807 3d tkins_z 1 17 134              | insert track Loop_out_134 tree 17
91 | 00808 91 
03 | 00809 .00 addr:840
48 | 00810 .86 
01 | 00811 01 end                           | end
39 | 00812 39 exec 146                      | goto  146
03 | 00813 .00 addr:815
2f | 00814 .92 
40 | 00815 40 push_c 1                      | push 1
01 | 00816 01 
90 | 00817 90 push_v ubyte 172              | push ack:ubyte
ac | 00818 ac 
0f | 00819 0f eq                            | eq
4f | 00820 4f ifelse 148 149                | ifelse True_148 EndIf_149
03 | 00821 .00 addr:825
39 | 00822 .94 
03 | 00823 .00 addr:833
41 | 00824 .95 
3d | 00825 3d tkins_z 1 17 134              | insert track Loop_out_134 tree 17
91 | 00826 91 
03 | 00827 .00 addr:840
48 | 00828 .86 
01 | 00829 01 end                           | end
39 | 00830 39 exec 149                      | goto  149
03 | 00831 .00 addr:833
41 | 00832 .95 
29 | 00833 29 clken_c 5 50 150              | clock enable Awake_50_150 50msec
01 | 00834 01 
05 | 00835 05 
32 | 00836 32 
02 | 00837 .00 addr:765
fd | 00838 .84 
01 | 00839 01 end                           | end
48 | 00840 48 memclr 40 8                   | clear WClocks gates from 5 to 6
28 | 00841 28 
08 | 00842 08 
48 | 00843 48 memclr 63 2                   | clear EXT gates for SEND_DONE_ACK()
3f | 00844 3f 
02 | 00845 02 
39 | 00846 39 exec 153                      | goto  153
02 | 00847 .00 addr:723
d3 | 00848 .7b 
3d | 00849 3d tkins_z 1 10 125              | insert track Loop_out_125 tree 10
8a | 00850 8a 
03 | 00851 .00 addr:857
59 | 00852 .7d 
01 | 00853 01 end                           | end
39 | 00854 39 exec 156                      | goto  156
02 | 00855 .00 addr:723
d3 | 00856 .7b 
48 | 00857 48 memclr 40 8                   | clear WClocks gates from 5 to 6
28 | 00858 28 
08 | 00859 08 
48 | 00860 48 memclr 58 2                   | clear EXT gates for SEND_DONE()
3a | 00861 3a 
02 | 00862 02 
48 | 00863 48 memclr 63 2                   | clear EXT gates for SEND_DONE_ACK()
3f | 00864 3f 
02 | 00865 02 
39 | 00866 39 exec 119                      | goto  119
02 | 00867 .00 addr:718
ce | 00868 .77 
48 | 00869 48 memclr 40 8                   | clear WClocks gates from 5 to 6
28 | 00870 28 
08 | 00871 08 
48 | 00872 48 memclr 58 2                   | clear EXT gates for SEND_DONE()
3a | 00873 3a 
02 | 00874 02 
48 | 00875 48 memclr 63 2                   | clear EXT gates for SEND_DONE_ACK()
3f | 00876 3f 
02 | 00877 02 
48 | 00878 48 memclr 82 2                   | clear EXT gates for Q_READY
52 | 00879 52 
02 | 00880 02 
01 | 00881 01 end                           | end
48 | 00882 48 memclr 0 48                   | clear WClocks gates from 0 to 6
00 | 00883 00 
30 | 00884 30 
01 | 00885 01 end                           | end
