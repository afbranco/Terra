206 870 7 6 0 0 48 6 48
00 | 00000 0 track 0
00 | 00001 0
00 | 00002 0
00 | 00003 0
00 | 00004 0 track 1
00 | 00005 0
00 | 00006 0
00 | 00007 0
00 | 00008 0 track 2
00 | 00009 0
00 | 00010 0
00 | 00011 0
00 | 00012 0 track 3
00 | 00013 0
00 | 00014 0
00 | 00015 0
00 | 00016 0 track 4
00 | 00017 0
00 | 00018 0
00 | 00019 0
00 | 00020 0 track 5
00 | 00021 0
00 | 00022 0
00 | 00023 0
00 | 00024 0 track 6
00 | 00025 0
00 | 00026 0
00 | 00027 0
00 | 00028 0 track 7
00 | 00029 0
00 | 00030 0
00 | 00031 0
00 | 00032 0000 wClock 0
00 | 00033 0001
00 | 00034 0002
00 | 00035 0003
00 | 00036 0004
00 | 00037 0005
00 | 00038 0006
00 | 00039 0007
00 | 00040 0008 wClock 1
00 | 00041 0009
00 | 00042 0010
00 | 00043 0011
00 | 00044 0012
00 | 00045 0013
00 | 00046 0014
00 | 00047 0015
00 | 00048 0016 wClock 2
00 | 00049 0017
00 | 00050 0018
00 | 00051 0019
00 | 00052 0020
00 | 00053 0021
00 | 00054 0022
00 | 00055 0023
00 | 00056 0024 wClock 3
00 | 00057 0025
00 | 00058 0026
00 | 00059 0027
00 | 00060 0028
00 | 00061 0029
00 | 00062 0030
00 | 00063 0031
00 | 00064 0032 wClock 4
00 | 00065 0033
00 | 00066 0034
00 | 00067 0035
00 | 00068 0036
00 | 00069 0037
00 | 00070 0038
00 | 00071 0039
00 | 00072 0040 wClock 5
00 | 00073 0041
00 | 00074 0042
00 | 00075 0043
00 | 00076 0044
00 | 00077 0045
00 | 00078 0046
00 | 00079 0047
00 | 00080 0048 inEvt 005 : TEMP
00 | 00081 0049           : 01 gates
00 | 00082 0050
00 | 00083 0051
00 | 00084 0052 inEvt 013 : CUSTOM_A
00 | 00085 0053           : 01 gates
00 | 00086 0054
00 | 00087 0055
00 | 00088 0056 inEvt 040 : SEND_DONE()
00 | 00089 0057           : 01 gates
00 | 00090 0058
00 | 00091 0059
00 | 00092 0060
00 | 00093 0061 inEvt 042 : SEND_DONE_ACK()
00 | 00094 0062           : 01 gates
00 | 00095 0063
00 | 00096 0064
00 | 00097 0065
00 | 00098 0066 inEvt 044 : RECEIVE()
00 | 00099 0067           : 04 gates
00 | 00100 0068
00 | 00101 0069
00 | 00102 0070
00 | 00103 0071
00 | 00104 0072
00 | 00105 0073
00 | 00106 0074
00 | 00107 0075
00 | 00108 0076
00 | 00109 0077
00 | 00110 0078
00 | 00111 0079
00 | 00112 0080 inEvt 046 : Q_READY
00 | 00113 0081           : 01 gates
00 | 00114 0082
00 | 00115 0083
00 | 00116 0084 $ret:1, 
00 | 00117 0085 nodeId:2, 
00 | 00118 0086 
00 | 00119 0087 baseNode:2, 
00 | 00120 0088 
00 | 00121 0089 stat:1, 
00 | 00122 0090 hop:1, 
00 | 00123 0091 father:2, 
00 | 00124 0092 
00 | 00125 0093 seqReq:2, 
00 | 00126 0094 
00 | 00127 0095 seqData:1, 
00 | 00128 0096 reqTopoBlind:1, 
00 | 00129 0097 msgTopo:25, 
00 | 00130 0098 
00 | 00131 0099 
00 | 00132 0100 
00 | 00133 0101 
00 | 00134 0102 
00 | 00135 0103 
00 | 00136 0104 
00 | 00137 0105 
00 | 00138 0106 
00 | 00139 0107 
00 | 00140 0108 
00 | 00141 0109 
00 | 00142 0110 
00 | 00143 0111 
00 | 00144 0112 
00 | 00145 0113 
00 | 00146 0114 
00 | 00147 0115 
00 | 00148 0116 
00 | 00149 0117 
00 | 00150 0118 
00 | 00151 0119 
00 | 00152 0120 
00 | 00153 0121 
00 | 00154 0122 msgRadio:25, 
00 | 00155 0123 
00 | 00156 0124 
00 | 00157 0125 
00 | 00158 0126 
00 | 00159 0127 
00 | 00160 0128 
00 | 00161 0129 
00 | 00162 0130 
00 | 00163 0131 
00 | 00164 0132 
00 | 00165 0133 
00 | 00166 0134 
00 | 00167 0135 
00 | 00168 0136 
00 | 00169 0137 
00 | 00170 0138 
00 | 00171 0139 
00 | 00172 0140 
00 | 00173 0141 
00 | 00174 0142 
00 | 00175 0143 
00 | 00176 0144 
00 | 00177 0145 
00 | 00178 0146 
00 | 00179 0147 msgData:25, 
00 | 00180 0148 
00 | 00181 0149 
00 | 00182 0150 
00 | 00183 0151 
00 | 00184 0152 
00 | 00185 0153 
00 | 00186 0154 
00 | 00187 0155 
00 | 00188 0156 
00 | 00189 0157 
00 | 00190 0158 
00 | 00191 0159 
00 | 00192 0160 
00 | 00193 0161 
00 | 00194 0162 
00 | 00195 0163 
00 | 00196 0164 
00 | 00197 0165 
00 | 00198 0166 
00 | 00199 0167 
00 | 00200 0168 
00 | 00201 0169 
00 | 00202 0170 
00 | 00203 0171 
00 | 00204 0172 ack:1, 
00 | 00205 0173 reply:1, 
d1 | 00206 d1 set_c ushort 48 1281          | config gate TEMP with 1 await(s) - 0x0501 = 1281
30 | 00207 30 
05 | 00208 05 
01 | 00209 01 
d1 | 00210 d1 set_c ushort 52 3329          | config gate CUSTOM_A with 1 await(s) - 0x0d01 = 3329
34 | 00211 34 
0d | 00212 0d 
01 | 00213 01 
d1 | 00214 d1 set_c ushort 56 10369         | config gate SEND_DONE() with 1 await(s) - 0x2881 = 10369
38 | 00215 38 
28 | 00216 28 
81 | 00217 81 
d1 | 00218 d1 set_c ushort 61 10881         | config gate SEND_DONE_ACK() with 1 await(s) - 0x2a81 = 10881
3d | 00219 3d 
2a | 00220 2a 
81 | 00221 81 
d1 | 00222 d1 set_c ushort 66 11396         | config gate RECEIVE() with 4 await(s) - 0x2c84 = 11396
42 | 00223 42 
2c | 00224 2c 
84 | 00225 84 
d1 | 00226 d1 set_c ushort 80 11777         | config gate Q_READY with 1 await(s) - 0x2e01 = 11777
50 | 00227 50 
2e | 00228 2e 
01 | 00229 01 
24 | 00230 24 func 0                        | func getNodeId
00 | 00231 00 
a1 | 00232 a1 pop ushort 85                 | pop nodeId
55 | 00233 55 
c1 | 00234 c1 set_c ushort 87 8             | baseNode = 8
57 | 00235 57 
08 | 00236 08 
d1 | 00237 d1 set_c ushort 91 0xfffe        | father = 0xfffe
5b | 00238 5b 
ff | 00239 ff 
fe | 00240 fe 
c1 | 00241 c1 set_c ushort 93 0             | seqReq = 0
5d | 00242 5d 
00 | 00243 00 
c0 | 00244 c0 set_c ubyte 95 0              | seqData = 0
5f | 00245 5f 
00 | 00246 00 
c0 | 00247 c0 set_c ubyte 96 0              | reqTopoBlind = 0
60 | 00248 60 
00 | 00249 00 
c0 | 00250 c0 set_c ubyte 147 2             | msgData.type = 2
93 | 00251 93 
02 | 00252 02 
2a | 00253 2a set_v ushort 148 ushort 85    | msgData.source = nodeId
11 | 00254 11 
94 | 00255 94 
55 | 00256 55 
2a | 00257 2a set_v ushort 160 ushort 85    | msgData.d16_3 = nodeId
11 | 00258 11 
a0 | 00259 a0 
55 | 00260 55 
2a | 00261 2a set_v ushort 98 ushort 85     | msgTopo.source = nodeId
11 | 00262 11 
62 | 00263 62 
55 | 00264 55 
91 | 00265 91 push_v ushort 87              | push baseNode:ushort
57 | 00266 57 
91 | 00267 91 push_v ushort 85              | push nodeId:ushort
55 | 00268 55 
0f | 00269 0f eq                            | eq
4f | 00270 4f ifelse 16 17                  | ifelse True_16 EndIf_17
01 | 00271 .00 addr:275
13 | 00272 .10 
01 | 00273 .00 addr:284
1c | 00274 .11 
c1 | 00275 c1 set_c ushort 91 1             | father = 1
5b | 00276 5b 
01 | 00277 01 
c1 | 00278 c1 set_c ushort 93 1             | seqReq = 1
5d | 00279 5d 
01 | 00280 01 
39 | 00281 39 exec 17                       | goto  17
01 | 00282 .00 addr:284
1c | 00283 .11 
89 | 00284 89 tkins_max 0 18                | insert track ParEver_sub_1_18
01 | 00285 .00 addr:300
2c | 00286 .12 
89 | 00287 89 tkins_max 0 19                | insert track ParEver_sub_2_19
01 | 00288 .00 addr:425
a9 | 00289 .13 
89 | 00290 89 tkins_max 0 20                | insert track ParEver_sub_3_20
01 | 00291 .00 addr:465
d1 | 00292 .14 
89 | 00293 89 tkins_max 0 21                | insert track ParEver_sub_4_21
02 | 00294 .00 addr:639
7f | 00295 .15 
89 | 00296 89 tkins_max 0 22                | insert track ParEver_sub_5_22
02 | 00297 .00 addr:696
b8 | 00298 .16 
01 | 00299 01 end                           | end
29 | 00300 29 clken_c 0 2000 26             | clock enable Awake_2000_26 2000msec
03 | 00301 03 
00 | 00302 00 
07 | 00303 07 
d0 | 00304 d0 
01 | 00305 .00 addr:308
34 | 00306 .1a 
01 | 00307 01 end                           | end
58 | 00308 58 outevt_c 20 1                 | emit REQ_CUSTOM_A len=1 const=1
14 | 00309 14 
01 | 00310 01 
89 | 00311 89 tkins_max 0 32                | insert track ParOr_sub_1_32
01 | 00312 .00 addr:318
3e | 00313 .20 
89 | 00314 89 tkins_max 0 33                | insert track ParOr_sub_2_33
01 | 00315 .00 addr:330
4a | 00316 .21 
01 | 00317 01 end                           | end
29 | 00318 29 clken_c 1 30000 35            | clock enable Awake_30000_35 30000msec
03 | 00319 03 
01 | 00320 01 
75 | 00321 75 
30 | 00322 30 
01 | 00323 .00 addr:326
46 | 00324 .23 
01 | 00325 01 end                           | end
89 | 00326 89 tkins_max 0 34                | insert track ParOr_out_34
01 | 00327 .00 addr:409
99 | 00328 .22 
01 | 00329 01 end                           | end
29 | 00330 29 clken_c 2 10000 36            | clock enable Awake_10000_36 10000msec
03 | 00331 03 
02 | 00332 02 
27 | 00333 27 
10 | 00334 10 
01 | 00335 .00 addr:338
52 | 00336 .24 
01 | 00337 01 end                           | end
26 | 00338 26 outevt_z 9                    | emit REQ_TEMP
09 | 00339 09 
d1 | 00340 d1 set_c ushort 50 39            | await TEMP[0]
32 | 00341 32 
01 | 00342 .00 addr:345
59 | 00343 .27 
01 | 00344 01 end                           | end
40 | 00345 40 push_c 156                    | push msgData.d16_1
9c | 00346 9c 
34 | 00347 34 getextdt_e 2                  | getExtData stack len=2
02 | 00348 02 
41 | 00349 41 push_c 0xfffe                 | push 0xfffe
ff | 00350 ff 
fe | 00351 fe 
91 | 00352 91 push_v ushort 91              | push father:ushort
5b | 00353 5b 
10 | 00354 10 neq                           | neq
4f | 00355 4f ifelse 52 53                  | ifelse True_52 False_53
01 | 00356 .00 addr:360
68 | 00357 .34 
01 | 00358 .00 addr:401
91 | 00359 .35 
2a | 00360 2a set_v ushort 150 ushort 91    | msgData.target = father
11 | 00361 11 
96 | 00362 96 
5b | 00363 5b 
40 | 00364 40 push_c 95                     | push &seqData
5f | 00365 5f 
60 | 00366 60 inc ubyte                     | inc ubyte
90 | 00367 90 push_v ubyte 95               | push seqData:ubyte
5f | 00368 5f 
25 | 00369 25 outevt_e 5                    | emit LEDS
05 | 00370 05 
2a | 00371 2a set_v ubyte 154 ubyte 95      | msgData.d8_3 = seqData
00 | 00372 00 
9a | 00373 9a 
5f | 00374 5f 
2a | 00375 2a set_v ushort 162 ushort 91    | msgData.d16_4 = father
11 | 00376 11 
a2 | 00377 a2 
5b | 00378 5b 
2a | 00379 2a set_v ubyte 153 ubyte 96      | msgData.d8_2 = reqTopoBlind
00 | 00380 00 
99 | 00381 99 
60 | 00382 60 
40 | 00383 40 push_c 100                    | push 100
64 | 00384 64 
91 | 00385 91 push_v ushort 85              | push nodeId:ushort
55 | 00386 55 
08 | 00387 08 mult                          | mult
27 | 00388 27 clken_e 3 0 49                | clock enable Awake_exp_49 (stack)ms
01 | 00389 01 
03 | 00390 03 
01 | 00391 .00 addr:394
8a | 00392 .31 
01 | 00393 01 end                           | end
40 | 00394 40 push_c 147                    | push_c &msgData:usrMsg2_t
93 | 00395 93 
24 | 00396 24 func 10                       | func qPut
0a | 00397 0a 
a0 | 00398 a0 pop ubyte 89                  | pop stat
59 | 00399 59 
01 | 00400 01 end                           | end
58 | 00401 58 outevt_c 20 1                 | emit REQ_CUSTOM_A len=1 const=1
14 | 00402 14 
01 | 00403 01 
01 | 00404 01 end                           | end
89 | 00405 89 tkins_max 0 34                | insert track ParOr_out_34
01 | 00406 .00 addr:409
99 | 00407 .22 
01 | 00408 01 end                           | end
48 | 00409 48 memclr 8 24                   | clear WClocks gates from 1 to 4
08 | 00410 08 
18 | 00411 18 
48 | 00412 48 memclr 50 2                   | clear EXT gates for TEMP
32 | 00413 32 
02 | 00414 02 
39 | 00415 39 exec 29                       | goto  29
01 | 00416 .00 addr:311
37 | 00417 .1d 
48 | 00418 48 memclr 8 24                   | clear WClocks gates from 1 to 4
08 | 00419 08 
18 | 00420 18 
48 | 00421 48 memclr 50 2                   | clear EXT gates for TEMP
32 | 00422 32 
02 | 00423 02 
01 | 00424 01 end                           | end
40 | 00425 40 push_c 2                      | push 2
02 | 00426 02 
a0 | 00427 a0 pop ubyte 68                  | evt RECEIVE() auxId = pop
44 | 00428 44 
d1 | 00429 d1 set_c ushort 69 58            | await RECEIVE()[0]
45 | 00430 45 
01 | 00431 .00 addr:434
b2 | 00432 .3a 
01 | 00433 01 end                           | end
5c | 00434 5c getextdt_v 97 25              | getExtData msgTopo 25
61 | 00435 61 
19 | 00436 19 
41 | 00437 41 push_c 0xfffe                 | push 0xfffe
ff | 00438 ff 
fe | 00439 fe 
91 | 00440 91 push_v ushort 91              | push father:ushort
5b | 00441 5b 
10 | 00442 10 neq                           | neq
4f | 00443 4f ifelse 61 62                  | ifelse True_61 EndIf_62
01 | 00444 .00 addr:448
c0 | 00445 .3d 
01 | 00446 .00 addr:425
a9 | 00447 .37 
2a | 00448 2a set_v ushort 100 ushort 91    | msgTopo.target = father
11 | 00449 11 
64 | 00450 64 
5b | 00451 5b 
40 | 00452 40 push_c 97                     | push_c &msgTopo:usrMsg2_t
61 | 00453 61 
24 | 00454 24 func 10                       | func qPut
0a | 00455 0a 
a0 | 00456 a0 pop ubyte 89                  | pop stat
59 | 00457 59 
39 | 00458 39 exec 62                       | goto  62
01 | 00459 .00 addr:425
a9 | 00460 .37 
48 | 00461 48 memclr 68 2                   | clear EXT gates for RECEIVE()
44 | 00462 44 
02 | 00463 02 
01 | 00464 01 end                           | end
91 | 00465 91 push_v ushort 87              | push baseNode:ushort
57 | 00466 57 
91 | 00467 91 push_v ushort 85              | push nodeId:ushort
55 | 00468 55 
10 | 00469 10 neq                           | neq
4f | 00470 4f ifelse 98 99                  | ifelse True_98 False_99
01 | 00471 .00 addr:475
db | 00472 .62 
02 | 00473 .00 addr:585
49 | 00474 .63 
89 | 00475 89 tkins_max 0 65                | insert track ParEver_sub_1_65
01 | 00476 .00 addr:482
e2 | 00477 .41 
89 | 00478 89 tkins_max 0 66                | insert track ParEver_sub_2_66
02 | 00479 .00 addr:539
1b | 00480 .42 
01 | 00481 01 end                           | end
40 | 00482 40 push_c 1                      | push 1
01 | 00483 01 
a0 | 00484 a0 pop ubyte 71                  | evt RECEIVE() auxId = pop
47 | 00485 47 
d1 | 00486 d1 set_c ushort 72 73            | await RECEIVE()[1]
48 | 00487 48 
01 | 00488 .00 addr:491
eb | 00489 .49 
01 | 00490 01 end                           | end
5c | 00491 5c getextdt_v 97 25              | getExtData msgTopo 25
61 | 00492 61 
19 | 00493 19 
91 | 00494 91 push_v ushort 93              | push seqReq:ushort
5d | 00495 5d 
91 | 00496 91 push_v ushort 108                    | push msgTopo.d16_2 [Optm:: push_c addr + deref]
6c | 00497 6c 
13 | 00498 13 gt                            | gt
4f | 00499 4f ifelse 80 81                  | ifelse True_80 EndIf_81
01 | 00500 .00 addr:504
f8 | 00501 .50 
01 | 00502 .00 addr:482
e2 | 00503 .46 
c0 | 00504 c0 set_c ubyte 96 0              | reqTopoBlind = 0
60 | 00505 60 
00 | 00506 00 
2a | 00507 2a set_v ushort 93 ushort 108    | seqReq = msgTopo.d16_2
11 | 00508 11 
5d | 00509 5d 
6c | 00510 6c 
2a | 00511 2a set_v ushort 91 ushort 98     | father = msgTopo.source
11 | 00512 11 
5b | 00513 5b 
62 | 00514 62 
40 | 00515 40 push_c 103                    | push msgTopo.d8_2
67 | 00516 67 
60 | 00517 60 inc ubyte                     | inc ubyte
2a | 00518 2a set_v ubyte 90 ubyte 103      | hop = msgTopo.d8_2
00 | 00519 00 
5a | 00520 5a 
67 | 00521 67 
2a | 00522 2a set_v ushort 98 ushort 85     | msgTopo.source = nodeId
11 | 00523 11 
62 | 00524 62 
55 | 00525 55 
40 | 00526 40 push_c 97                     | push_c &msgTopo:usrMsg2_t
61 | 00527 61 
24 | 00528 24 func 10                       | func qPut
0a | 00529 0a 
a0 | 00530 a0 pop ubyte 89                  | pop stat
59 | 00531 59 
39 | 00532 39 exec 81                       | goto  81
01 | 00533 .00 addr:482
e2 | 00534 .46 
48 | 00535 48 memclr 68 2                   | clear EXT gates for RECEIVE()
44 | 00536 44 
02 | 00537 02 
01 | 00538 01 end                           | end
40 | 00539 40 push_c 3                      | push 3
03 | 00540 03 
a0 | 00541 a0 pop ubyte 74                  | evt RECEIVE() auxId = pop
4a | 00542 4a 
d1 | 00543 d1 set_c ushort 75 85            | await RECEIVE()[2]
4b | 00544 4b 
02 | 00545 .00 addr:548
24 | 00546 .55 
01 | 00547 01 end                           | end
5c | 00548 5c getextdt_v 97 25              | getExtData msgTopo 25
61 | 00549 61 
19 | 00550 19 
40 | 00551 40 push_c 0                      | push 0
00 | 00552 00 
90 | 00553 90 push_v ubyte 96               | push reqTopoBlind:ubyte
60 | 00554 60 
0f | 00555 0f eq                            | eq
41 | 00556 41 push_c 0xfffe                 | push 0xfffe
ff | 00557 ff 
fe | 00558 fe 
91 | 00559 91 push_v ushort 91              | push father:ushort
5b | 00560 5b 
10 | 00561 10 neq                           | neq
16 | 00562 16 land                          | land
4f | 00563 4f ifelse 89 90                  | ifelse True_89 EndIf_90
02 | 00564 .00 addr:568
38 | 00565 .59 
02 | 00566 .00 addr:539
1b | 00567 .52 
2a | 00568 2a set_v ushort 100 ushort 91    | msgTopo.target = father
11 | 00569 11 
64 | 00570 64 
5b | 00571 5b 
40 | 00572 40 push_c 97                     | push_c &msgTopo:usrMsg2_t
61 | 00573 61 
24 | 00574 24 func 10                       | func qPut
0a | 00575 0a 
a0 | 00576 a0 pop ubyte 89                  | pop stat
59 | 00577 59 
39 | 00578 39 exec 90                       | goto  90
02 | 00579 .00 addr:539
1b | 00580 .52 
48 | 00581 48 memclr 68 2                   | clear EXT gates for RECEIVE()
44 | 00582 44 
02 | 00583 02 
01 | 00584 01 end                           | end
40 | 00585 40 push_c 3                      | push 3
03 | 00586 03 
a0 | 00587 a0 pop ubyte 77                  | evt RECEIVE() auxId = pop
4d | 00588 4d 
d1 | 00589 d1 set_c ushort 78 94            | await RECEIVE()[3]
4e | 00590 4e 
02 | 00591 .00 addr:594
52 | 00592 .5e 
01 | 00593 01 end                           | end
5c | 00594 5c getextdt_v 97 25              | getExtData msgTopo 25
61 | 00595 61 
19 | 00596 19 
c0 | 00597 c0 set_c ubyte 97 1              | msgTopo.type = 1
61 | 00598 61 
01 | 00599 01 
2a | 00600 2a set_v ushort 98 ushort 85     | msgTopo.source = nodeId
11 | 00601 11 
62 | 00602 62 
55 | 00603 55 
d1 | 00604 d1 set_c ushort 100 0xffff       | msgTopo.target = 0xffff
64 | 00605 64 
ff | 00606 ff 
ff | 00607 ff 
c0 | 00608 c0 set_c ubyte 103 0             | msgTopo.d8_2 = 0
67 | 00609 67 
00 | 00610 00 
40 | 00611 40 push_c 93                     | push &seqReq
5d | 00612 5d 
61 | 00613 61 inc ushort                    | inc ushort
2a | 00614 2a set_v ushort 108 ushort 93    | msgTopo.d16_2 = seqReq
11 | 00615 11 
6c | 00616 6c 
5d | 00617 5d 
40 | 00618 40 push_c 97                     | push_c &msgTopo:usrMsg2_t
61 | 00619 61 
24 | 00620 24 func 10                       | func qPut
0a | 00621 0a 
a0 | 00622 a0 pop ubyte 89                  | pop stat
59 | 00623 59 
29 | 00624 29 clken_c 4 2000 97             | clock enable Awake_2000_97 2000msec
03 | 00625 03 
04 | 00626 04 
07 | 00627 07 
d0 | 00628 d0 
02 | 00629 .00 addr:585
49 | 00630 .5b 
01 | 00631 01 end                           | end
48 | 00632 48 memclr 32 8                   | clear WClocks gates from 4 to 5
20 | 00633 20 
08 | 00634 08 
48 | 00635 48 memclr 68 2                   | clear EXT gates for RECEIVE()
44 | 00636 44 
02 | 00637 02 
01 | 00638 01 end                           | end
91 | 00639 91 push_v ushort 87              | push baseNode:ushort
57 | 00640 57 
91 | 00641 91 push_v ushort 85              | push nodeId:ushort
55 | 00642 55 
10 | 00643 10 neq                           | neq
4f | 00644 4f ifelse 112 113                | ifelse True_112 EndIf_113
02 | 00645 .00 addr:649
89 | 00646 .70 
02 | 00647 .00 addr:695
b7 | 00648 .71 
d1 | 00649 d1 set_c ushort 54 106           | await CUSTOM_A[0]
36 | 00650 36 
02 | 00651 .00 addr:654
8e | 00652 .6a 
01 | 00653 01 end                           | end
41 | 00654 41 push_c 0xfffe                 | push 0xfffe
ff | 00655 ff 
fe | 00656 fe 
91 | 00657 91 push_v ushort 91              | push father:ushort
5b | 00658 5b 
0f | 00659 0f eq                            | eq
4f | 00660 4f ifelse 110 111                | ifelse True_110 EndIf_111
02 | 00661 .00 addr:665
99 | 00662 .6e 
02 | 00663 .00 addr:649
89 | 00664 .67 
c0 | 00665 c0 set_c ubyte 97 3              | msgTopo.type = 3
61 | 00666 61 
03 | 00667 03 
2a | 00668 2a set_v ushort 98 ushort 85     | msgTopo.source = nodeId
11 | 00669 11 
62 | 00670 62 
55 | 00671 55 
d1 | 00672 d1 set_c ushort 100 0xffff       | msgTopo.target = 0xffff
64 | 00673 64 
ff | 00674 ff 
ff | 00675 ff 
40 | 00676 40 push_c 93                     | push &seqReq
5d | 00677 5d 
61 | 00678 61 inc ushort                    | inc ushort
2a | 00679 2a set_v ushort 108 ushort 93    | msgTopo.d16_2 = seqReq
11 | 00680 11 
6c | 00681 6c 
5d | 00682 5d 
40 | 00683 40 push_c 97                     | push_c &msgTopo:usrMsg2_t
61 | 00684 61 
24 | 00685 24 func 10                       | func qPut
0a | 00686 0a 
a0 | 00687 a0 pop ubyte 89                  | pop stat
59 | 00688 59 
39 | 00689 39 exec 111                      | goto  111
02 | 00690 .00 addr:649
89 | 00691 .67 
48 | 00692 48 memclr 54 2                   | clear EXT gates for CUSTOM_A
36 | 00693 36 
02 | 00694 02 
01 | 00695 01 end                           | end
c0 | 00696 c0 set_c ubyte 172 1             | ack = 1
ac | 00697 ac 
01 | 00698 01 
c0 | 00699 c0 set_c ubyte 173 0             | reply = 0
ad | 00700 ad 
00 | 00701 00 
d1 | 00702 d1 set_c ushort 82 119           | await Q_READY[0]
52 | 00703 52 
02 | 00704 .00 addr:707
c3 | 00705 .77 
01 | 00706 01 end                           | end
40 | 00707 40 push_c 0                      | push 0
00 | 00708 00 
24 | 00709 24 func 12                       | func qSize
0c | 00710 0c 
13 | 00711 13 gt                            | gt
4f | 00712 4f ifelse 151 152                | ifelse True_151 False_152
02 | 00713 .00 addr:717
cd | 00714 .97 
03 | 00715 .00 addr:833
41 | 00716 .98 
c0 | 00717 c0 set_c ubyte 173 0             | reply = 0
ad | 00718 ad 
00 | 00719 00 
40 | 00720 40 push_c 122                    | push_c &msgRadio:usrMsg2_t
7a | 00721 7a 
24 | 00722 24 func 11                       | func qGet
0b | 00723 0b 
a0 | 00724 a0 pop ubyte 89                  | pop stat
59 | 00725 59 
41 | 00726 41 push_c 0xffff                 | push 0xffff
ff | 00727 ff 
ff | 00728 ff 
91 | 00729 91 push_v ushort 125                    | push msgRadio.target [Optm:: push_c addr + deref]
7d | 00730 7d 
0f | 00731 0f eq                            | eq
4f | 00732 4f ifelse 148 149                | ifelse True_148 False_149
02 | 00733 .00 addr:737
e1 | 00734 .94 
02 | 00735 .00 addr:749
ed | 00736 .95 
b1 | 00737 b1 outevt_v 40 122               | emit SEND len=25 var=msgRadio
28 | 00738 28 
7a | 00739 7a 
90 | 00740 90 push_v ubyte 122                    | push msgRadio.type [Optm:: push_c addr + deref]
7a | 00741 7a 
a0 | 00742 a0 pop ubyte 58                  | evt SEND_DONE() auxId = pop
3a | 00743 3a 
d1 | 00744 d1 set_c ushort 59 128           | await SEND_DONE()[0]
3b | 00745 3b 
02 | 00746 .00 addr:707
c3 | 00747 .78 
01 | 00748 01 end                           | end
90 | 00749 90 push_v ubyte 173              | push reply:ubyte
ad | 00750 ad 
90 | 00751 90 push_v ubyte 127                    | push msgRadio.d8_1 [Optm:: push_c addr + deref]
7f | 00752 7f 
06 | 00753 06 add                           | add
a0 | 00754 a0 pop ubyte 127                 | pop msgRadio.d8_1
7f | 00755 7f 
b1 | 00756 b1 outevt_v 41 122               | emit SEND_ACK len=25 var=msgRadio
29 | 00757 29 
7a | 00758 7a 
90 | 00759 90 push_v ubyte 122                    | push msgRadio.type [Optm:: push_c addr + deref]
7a | 00760 7a 
a0 | 00761 a0 pop ubyte 63                  | evt SEND_DONE_ACK() auxId = pop
3f | 00762 3f 
d1 | 00763 d1 set_c ushort 64 138           | await SEND_DONE_ACK()[0]
40 | 00764 40 
03 | 00765 .00 addr:768
00 | 00766 .8a 
01 | 00767 01 end                           | end
5c | 00768 5c getextdt_v 172 1              | getExtData ack 1
ac | 00769 ac 
01 | 00770 01 
40 | 00771 40 push_c 173                    | push &reply
ad | 00772 ad 
60 | 00773 60 inc ubyte                     | inc ubyte
40 | 00774 40 push_c 20                     | push 20
14 | 00775 14 
90 | 00776 90 push_v ubyte 173              | push reply:ubyte
ad | 00777 ad 
13 | 00778 13 gt                            | gt
4f | 00779 4f ifelse 142 143                | ifelse True_142 EndIf_143
03 | 00780 .00 addr:784
10 | 00781 .8e 
03 | 00782 .00 addr:799
1f | 00783 .8f 
d1 | 00784 d1 set_c ushort 91 0xfffe        | father = 0xfffe
5b | 00785 5b 
ff | 00786 ff 
fe | 00787 fe 
58 | 00788 58 outevt_c 20 1                 | emit REQ_CUSTOM_A len=1 const=1
14 | 00789 14 
01 | 00790 01 
3d | 00791 3d tkins_z 1 17 131              | insert track Loop_out_131 tree 17
91 | 00792 91 
03 | 00793 .00 addr:824
38 | 00794 .83 
01 | 00795 01 end                           | end
39 | 00796 39 exec 143                      | goto  143
03 | 00797 .00 addr:799
1f | 00798 .8f 
40 | 00799 40 push_c 1                      | push 1
01 | 00800 01 
90 | 00801 90 push_v ubyte 172              | push ack:ubyte
ac | 00802 ac 
0f | 00803 0f eq                            | eq
4f | 00804 4f ifelse 145 146                | ifelse True_145 EndIf_146
03 | 00805 .00 addr:809
29 | 00806 .91 
03 | 00807 .00 addr:817
31 | 00808 .92 
3d | 00809 3d tkins_z 1 17 131              | insert track Loop_out_131 tree 17
91 | 00810 91 
03 | 00811 .00 addr:824
38 | 00812 .83 
01 | 00813 01 end                           | end
39 | 00814 39 exec 146                      | goto  146
03 | 00815 .00 addr:817
31 | 00816 .92 
29 | 00817 29 clken_c 5 50 147              | clock enable Awake_50_147 50msec
01 | 00818 01 
05 | 00819 05 
32 | 00820 32 
02 | 00821 .00 addr:749
ed | 00822 .81 
01 | 00823 01 end                           | end
48 | 00824 48 memclr 40 8                   | clear WClocks gates from 5 to 6
28 | 00825 28 
08 | 00826 08 
48 | 00827 48 memclr 63 2                   | clear EXT gates for SEND_DONE_ACK()
3f | 00828 3f 
02 | 00829 02 
39 | 00830 39 exec 150                      | goto  150
02 | 00831 .00 addr:707
c3 | 00832 .78 
3d | 00833 3d tkins_z 1 10 122              | insert track Loop_out_122 tree 10
8a | 00834 8a 
03 | 00835 .00 addr:841
49 | 00836 .7a 
01 | 00837 01 end                           | end
39 | 00838 39 exec 153                      | goto  153
02 | 00839 .00 addr:707
c3 | 00840 .78 
48 | 00841 48 memclr 40 8                   | clear WClocks gates from 5 to 6
28 | 00842 28 
08 | 00843 08 
48 | 00844 48 memclr 58 2                   | clear EXT gates for SEND_DONE()
3a | 00845 3a 
02 | 00846 02 
48 | 00847 48 memclr 63 2                   | clear EXT gates for SEND_DONE_ACK()
3f | 00848 3f 
02 | 00849 02 
39 | 00850 39 exec 116                      | goto  116
02 | 00851 .00 addr:702
be | 00852 .74 
48 | 00853 48 memclr 40 8                   | clear WClocks gates from 5 to 6
28 | 00854 28 
08 | 00855 08 
48 | 00856 48 memclr 58 2                   | clear EXT gates for SEND_DONE()
3a | 00857 3a 
02 | 00858 02 
48 | 00859 48 memclr 63 2                   | clear EXT gates for SEND_DONE_ACK()
3f | 00860 3f 
02 | 00861 02 
48 | 00862 48 memclr 82 2                   | clear EXT gates for Q_READY
52 | 00863 52 
02 | 00864 02 
01 | 00865 01 end                           | end
48 | 00866 48 memclr 0 48                   | clear WClocks gates from 0 to 6
00 | 00867 00 
30 | 00868 30 
01 | 00869 01 end                           | end
