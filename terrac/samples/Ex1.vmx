192 900 6 6 0 0 48 6 48
00 | 0000 0 track 0
00 | 0001 0
00 | 0002 0
00 | 0003 0
00 | 0004 0 track 1
00 | 0005 0
00 | 0006 0
00 | 0007 0
00 | 0008 0 track 2
00 | 0009 0
00 | 0010 0
00 | 0011 0
00 | 0012 0 track 3
00 | 0013 0
00 | 0014 0
00 | 0015 0
00 | 0016 0 track 4
00 | 0017 0
00 | 0018 0
00 | 0019 0
00 | 0020 0 track 5
00 | 0021 0
00 | 0022 0
00 | 0023 0
00 | 0024 0 track 6
00 | 0025 0
00 | 0026 0
00 | 0027 0
00 | 0028 0000 wClock 0
00 | 0029 0001
00 | 0030 0002
00 | 0031 0003
00 | 0032 0004
00 | 0033 0005
00 | 0034 0006
00 | 0035 0007
00 | 0036 0008 wClock 1
00 | 0037 0009
00 | 0038 0010
00 | 0039 0011
00 | 0040 0012
00 | 0041 0013
00 | 0042 0014
00 | 0043 0015
00 | 0044 0016 wClock 2
00 | 0045 0017
00 | 0046 0018
00 | 0047 0019
00 | 0048 0020
00 | 0049 0021
00 | 0050 0022
00 | 0051 0023
00 | 0052 0024 wClock 3
00 | 0053 0025
00 | 0054 0026
00 | 0055 0027
00 | 0056 0028
00 | 0057 0029
00 | 0058 0030
00 | 0059 0031
00 | 0060 0032 wClock 4
00 | 0061 0033
00 | 0062 0034
00 | 0063 0035
00 | 0064 0036
00 | 0065 0037
00 | 0066 0038
00 | 0067 0039
00 | 0068 0040 wClock 5
00 | 0069 0041
00 | 0070 0042
00 | 0071 0043
00 | 0072 0044
00 | 0073 0045
00 | 0074 0046
00 | 0075 0047
00 | 0076 0048 inEvt 000 : TEMP
00 | 0077 0049           : 01 gates
00 | 0078 0050
00 | 0079 0051
00 | 0080 0052 inEvt 003 : SEND_DONE
00 | 0081 0053           : 01 gates
00 | 0082 0054
00 | 0083 0055
00 | 0084 0056 inEvt 004 : SEND_DONE_ACK
00 | 0085 0057           : 01 gates
00 | 0086 0058
00 | 0087 0059
00 | 0088 0060 inEvt 005 : RECEIVE
00 | 0089 0061           : 02 gates
00 | 0090 0062
00 | 0091 0063
00 | 0092 0064
00 | 0093 0065
00 | 0094 0066 inEvt 006 : Q_READY
00 | 0095 0067           : 01 gates
00 | 0096 0068
00 | 0097 0069
00 | 0098 0070 inEvt 011 : CUSTOM_A
00 | 0099 0071           : 01 gates
00 | 0100 0072
00 | 0101 0073
00 | 0102 0074 $ret:1, 
00 | 0103 0075 nodeId:2, 
00 | 0104 0076 
00 | 0105 0077 baseNode:2, 
00 | 0106 0078 
00 | 0107 0079 stat:1, 
00 | 0108 0080 hop:1, 
00 | 0109 0081 father:2, 
00 | 0110 0082 
00 | 0111 0083 seqReq:2, 
00 | 0112 0084 
00 | 0113 0085 seqData:1, 
00 | 0114 0086 reqTopoBlind:1, 
00 | 0115 0087 msgTopo:25, 
00 | 0116 0088 
00 | 0117 0089 
00 | 0118 0090 
00 | 0119 0091 
00 | 0120 0092 
00 | 0121 0093 
00 | 0122 0094 
00 | 0123 0095 
00 | 0124 0096 
00 | 0125 0097 
00 | 0126 0098 
00 | 0127 0099 
00 | 0128 0100 
00 | 0129 0101 
00 | 0130 0102 
00 | 0131 0103 
00 | 0132 0104 
00 | 0133 0105 
00 | 0134 0106 
00 | 0135 0107 
00 | 0136 0108 
00 | 0137 0109 
00 | 0138 0110 
00 | 0139 0111 
00 | 0140 0112 msgRadio:25, 
00 | 0141 0113 
00 | 0142 0114 
00 | 0143 0115 
00 | 0144 0116 
00 | 0145 0117 
00 | 0146 0118 
00 | 0147 0119 
00 | 0148 0120 
00 | 0149 0121 
00 | 0150 0122 
00 | 0151 0123 
00 | 0152 0124 
00 | 0153 0125 
00 | 0154 0126 
00 | 0155 0127 
00 | 0156 0128 
00 | 0157 0129 
00 | 0158 0130 
00 | 0159 0131 
00 | 0160 0132 
00 | 0161 0133 
00 | 0162 0134 
00 | 0163 0135 
00 | 0164 0136 
00 | 0165 0137 msgData:25, 
00 | 0166 0138 
00 | 0167 0139 
00 | 0168 0140 
00 | 0169 0141 
00 | 0170 0142 
00 | 0171 0143 
00 | 0172 0144 
00 | 0173 0145 
00 | 0174 0146 
00 | 0175 0147 
00 | 0176 0148 
00 | 0177 0149 
00 | 0178 0150 
00 | 0179 0151 
00 | 0180 0152 
00 | 0181 0153 
00 | 0182 0154 
00 | 0183 0155 
00 | 0184 0156 
00 | 0185 0157 
00 | 0186 0158 
00 | 0187 0159 
00 | 0188 0160 
00 | 0189 0161 
00 | 0190 0162 ack:1, 
00 | 0191 0163 reply:1, 
e4 | 0192 e4 set16_c ushort 48 1           | config gate TEMP with 1 await(s) - 0x0001 = 1
30 | 0193 30 
01 | 0194 01 
e5 | 0195 e5 set16_c ushort 52 769         | config gate SEND_DONE with 1 await(s) - 0x0301 = 769
34 | 0196 34 
03 | 0197 03 
01 | 0198 01 
e5 | 0199 e5 set16_c ushort 56 1025        | config gate SEND_DONE_ACK with 1 await(s) - 0x0401 = 1025
38 | 0200 38 
04 | 0201 04 
01 | 0202 01 
e5 | 0203 e5 set16_c ushort 60 1282        | config gate RECEIVE with 2 await(s) - 0x0502 = 1282
3c | 0204 3c 
05 | 0205 05 
02 | 0206 02 
e5 | 0207 e5 set16_c ushort 66 1537        | config gate Q_READY with 1 await(s) - 0x0601 = 1537
42 | 0208 42 
06 | 0209 06 
01 | 0210 01 
e5 | 0211 e5 set16_c ushort 70 2817        | config gate CUSTOM_A with 1 await(s) - 0x0b01 = 2817
46 | 0212 46 
0b | 0213 0b 
01 | 0214 01 
19 | 0215 19 func 0                        | push nodeId:ushort
00 | 0216 00 
21 | 0217 21 popx ushort 75                | pop nodeId
4b | 0218 4b 
e4 | 0219 e4 set16_c ushort 77 2           | baseNode = 2
4d | 0220 4d 
02 | 0221 02 
28 | 0222 28 push_c 10                     | push 10
0a | 0223 0a 
39 | 0224 39 pushx_v ushort 75             | push nodeId:ushort
4b | 0225 4b 
14 | 0226 14 gt                            | gt
7f | 0227 7f ifelse 8 9                    | ifelse True_8 EndIf_9
00 | 0228 .00 addr:232
e8 | 0229 .08 
00 | 0230 .00 addr:238
ee | 0231 .09 
e4 | 0232 e4 set16_c ushort 77 11          | baseNode = 11
4d | 0233 4d 
0b | 0234 0b 
75 | 0235 75 exec 9                        | goto  9
00 | 0236 .00 addr:238
ee | 0237 .09 
e5 | 0238 e5 set16_c ushort 81 0xfffe      | father = 0xfffe
51 | 0239 51 
ff | 0240 ff 
fe | 0241 fe 
e4 | 0242 e4 set16_c ushort 83 0           | seqReq = 0
53 | 0243 53 
00 | 0244 00 
e0 | 0245 e0 set16_c ubyte 85 0            | seqData = 0
55 | 0246 55 
00 | 0247 00 
e0 | 0248 e0 set16_c ubyte 86 0            | reqTopoBlind = 0
56 | 0249 56 
00 | 0250 00 
e0 | 0251 e0 set16_c ubyte 137 2           | msgData.type = 2
89 | 0252 89 
02 | 0253 02 
f4 | 0254 f4 set_v ushort 138 75           | msgData.source = nodeId
8a | 0255 8a 
4b | 0256 4b 
f4 | 0257 f4 set_v ushort 150 75           | msgData.d16_3 = nodeId
96 | 0258 96 
4b | 0259 4b 
f4 | 0260 f4 set_v ushort 88 75            | msgTopo.source = nodeId
58 | 0261 58 
4b | 0262 4b 
39 | 0263 39 pushx_v ushort 77             | push baseNode:ushort
4d | 0264 4d 
39 | 0265 39 pushx_v ushort 75             | push nodeId:ushort
4b | 0266 4b 
10 | 0267 10 eq                            | eq
7f | 0268 7f ifelse 19 20                  | ifelse True_19 EndIf_20
01 | 0269 .00 addr:273
11 | 0270 .13 
01 | 0271 .00 addr:282
1a | 0272 .14 
e4 | 0273 e4 set16_c ushort 81 1           | father = 1
51 | 0274 51 
01 | 0275 01 
e4 | 0276 e4 set16_c ushort 83 1           | seqReq = 1
53 | 0277 53 
01 | 0278 01 
75 | 0279 75 exec 20                       | goto  20
01 | 0280 .00 addr:282
1a | 0281 .14 
d1 | 0282 d1 tkins_max 0 21                | insert track ParEver_sub_1_21
01 | 0283 .00 addr:298
2a | 0284 .15 
d1 | 0285 d1 tkins_max 0 22                | insert track ParEver_sub_2_22
01 | 0286 .00 addr:419
a3 | 0287 .16 
d1 | 0288 d1 tkins_max 0 23                | insert track ParEver_sub_3_23
02 | 0289 .00 addr:579
43 | 0290 .17 
d1 | 0291 d1 tkins_max 0 24                | insert track ParEver_sub_4_24
02 | 0292 .00 addr:656
90 | 0293 .18 
d1 | 0294 d1 tkins_max 0 25                | insert track ParEver_sub_5_25
02 | 0295 .00 addr:717
cd | 0296 .19 
01 | 0297 01 end                           | end
a5 | 0298 a5 clken_c 0 2000 29             | clock enable Awake_2000_29 2000msec
00 | 0299 00 
07 | 0300 07 
d0 | 0301 d0 
01 | 0302 .00 addr:305
31 | 0303 .1d 
01 | 0304 01 end                           | end
68 | 0305 68 outevt_c 18 1                 | emit REQ_CUSTOM_A len=1 const=1
12 | 0306 12 
01 | 0307 01 
d1 | 0308 d1 tkins_max 0 35                | insert track ParOr_sub_1_35
01 | 0309 .00 addr:315
3b | 0310 .23 
d1 | 0311 d1 tkins_max 0 36                | insert track ParOr_sub_2_36
01 | 0312 .00 addr:326
46 | 0313 .24 
01 | 0314 01 end                           | end
a5 | 0315 a5 clken_c 1 30000 38            | clock enable Awake_30000_38 30000msec
01 | 0316 01 
75 | 0317 75 
30 | 0318 30 
01 | 0319 .00 addr:322
42 | 0320 .26 
01 | 0321 01 end                           | end
d1 | 0322 d1 tkins_max 0 37                | insert track ParOr_out_37
01 | 0323 .00 addr:403
93 | 0324 .25 
01 | 0325 01 end                           | end
a5 | 0326 a5 clken_c 2 10000 39            | clock enable Awake_10000_39 10000msec
02 | 0327 02 
27 | 0328 27 
10 | 0329 10 
01 | 0330 .00 addr:333
4d | 0331 .27 
01 | 0332 01 end                           | end
1a | 0333 1a outevt_z 5                    | emit REQ_TEMP
05 | 0334 05 
e5 | 0335 e5 set16_c ushort 50 42          | await TEMP[0]
32 | 0336 32 
01 | 0337 .00 addr:340
54 | 0338 .2a 
01 | 0339 01 end                           | end
28 | 0340 28 push_c 146                    | push msgData.d16_1
92 | 0341 92 
98 | 0342 98 getextdt_e 2                  | getExtData stack len=2
02 | 0343 02 
29 | 0344 29 push_c 0xfffe                 | push 0xfffe
ff | 0345 ff 
fe | 0346 fe 
39 | 0347 39 pushx_v ushort 81             | push father:ushort
51 | 0348 51 
11 | 0349 11 neq                           | neq
7f | 0350 7f ifelse 55 56                  | ifelse True_55 False_56
01 | 0351 .00 addr:355
63 | 0352 .37 
01 | 0353 .00 addr:392
88 | 0354 .38 
f4 | 0355 f4 set_v ushort 140 81           | msgData.target = father
8c | 0356 8c 
51 | 0357 51 
28 | 0358 28 push_c 85                     | push &seqData
55 | 0359 55 
58 | 0360 58 inc ubyte                     | inc ubyte
70 | 0361 70 outevtx_v 1 85                | emit LEDS len=1 var=seqData
01 | 0362 01 
55 | 0363 55 
f0 | 0364 f0 set_v ubyte 144 85            | msgData.d8_3 = seqData
90 | 0365 90 
55 | 0366 55 
f4 | 0367 f4 set_v ushort 152 81           | msgData.d16_4 = father
98 | 0368 98 
51 | 0369 51 
f0 | 0370 f0 set_v ubyte 143 86            | msgData.d8_2 = reqTopoBlind
8f | 0371 8f 
56 | 0372 56 
28 | 0373 28 push_c 100                    | push 100
64 | 0374 64 
39 | 0375 39 pushx_v ushort 75             | push nodeId:ushort
4b | 0376 4b 
09 | 0377 09 mult                          | mult
c4 | 0378 c4 clken_e 3 0 52                | clock enable Awake_exp_52 (stack)ms
03 | 0379 03 
01 | 0380 .00 addr:383
7f | 0381 .34 
01 | 0382 01 end                           | end
28 | 0383 28 push_c 137                    | push_c &msgData:usrMsg2_t
89 | 0384 89 
19 | 0385 19 func 1                        | push_c &msgData:usrMsg2_t
01 | 0386 01 
20 | 0387 20 popx ubyte 79                 | pop stat
4f | 0388 4f 
75 | 0389 75 exec 57                       | goto  57
01 | 0390 .00 addr:398
8e | 0391 .39 
68 | 0392 68 outevt_c 18 1                 | emit REQ_CUSTOM_A len=1 const=1
12 | 0393 12 
01 | 0394 01 
75 | 0395 75 exec 57                       | goto  57
01 | 0396 .00 addr:398
8e | 0397 .39 
01 | 0398 01 end                           | end
d1 | 0399 d1 tkins_max 0 37                | insert track ParOr_out_37
01 | 0400 .00 addr:403
93 | 0401 .25 
01 | 0402 01 end                           | end
78 | 0403 78 memclr 8 24                   | clear WClocks gates from 1 to 4
08 | 0404 08 
18 | 0405 18 
78 | 0406 78 memclr 50 2                   | clear EXT gates for TEMP
32 | 0407 32 
02 | 0408 02 
75 | 0409 75 exec 32                       | goto  32
01 | 0410 .00 addr:308
34 | 0411 .20 
78 | 0412 78 memclr 8 24                   | clear WClocks gates from 1 to 4
08 | 0413 08 
18 | 0414 18 
78 | 0415 78 memclr 50 2                   | clear EXT gates for TEMP
32 | 0416 32 
02 | 0417 02 
01 | 0418 01 end                           | end
e5 | 0419 e5 set16_c ushort 62 61          | await RECEIVE[0]
3e | 0420 3e 
01 | 0421 .00 addr:424
a8 | 0422 .3d 
01 | 0423 01 end                           | end
50 | 0424 50 getextdt_v 87 25              | getExtData msgTopo 25
57 | 0425 57 
19 | 0426 19 
28 | 0427 28 push_c 2                      | push 2
02 | 0428 02 
28 | 0429 28 push_c 87                     | push msgTopo.type
57 | 0430 57 
94 | 0431 94 deref ubyte                   | deref ubyte
10 | 0432 10 eq                            | eq
7f | 0433 7f ifelse 67 68                  | ifelse True_67 EndIf_68
01 | 0434 .00 addr:438
b6 | 0435 .43 
01 | 0436 .00 addr:464
d0 | 0437 .44 
29 | 0438 29 push_c 0xfffe                 | push 0xfffe
ff | 0439 ff 
fe | 0440 fe 
39 | 0441 39 pushx_v ushort 81             | push father:ushort
51 | 0442 51 
11 | 0443 11 neq                           | neq
7f | 0444 7f ifelse 65 66                  | ifelse True_65 EndIf_66
01 | 0445 .00 addr:449
c1 | 0446 .41 
01 | 0447 .00 addr:461
cd | 0448 .42 
f4 | 0449 f4 set_v ushort 90 81            | msgTopo.target = father
5a | 0450 5a 
51 | 0451 51 
28 | 0452 28 push_c 87                     | push_c &msgTopo:usrMsg2_t
57 | 0453 57 
19 | 0454 19 func 1                        | push_c &msgTopo:usrMsg2_t
01 | 0455 01 
20 | 0456 20 popx ubyte 79                 | pop stat
4f | 0457 4f 
75 | 0458 75 exec 66                       | goto  66
01 | 0459 .00 addr:461
cd | 0460 .42 
75 | 0461 75 exec 68                       | goto  68
01 | 0462 .00 addr:464
d0 | 0463 .44 
39 | 0464 39 pushx_v ushort 77             | push baseNode:ushort
4d | 0465 4d 
39 | 0466 39 pushx_v ushort 75             | push nodeId:ushort
4b | 0467 4b 
11 | 0468 11 neq                           | neq
7f | 0469 7f ifelse 90 91                  | ifelse True_90 EndIf_91
01 | 0470 .00 addr:474
da | 0471 .5a 
02 | 0472 .00 addr:572
3c | 0473 .5b 
28 | 0474 28 push_c 1                      | push 1
01 | 0475 01 
28 | 0476 28 push_c 87                     | push msgTopo.type
57 | 0477 57 
94 | 0478 94 deref ubyte                   | deref ubyte
10 | 0479 10 eq                            | eq
7f | 0480 7f ifelse 80 81                  | ifelse True_80 EndIf_81
01 | 0481 .00 addr:485
e5 | 0482 .50 
02 | 0483 .00 addr:526
0e | 0484 .51 
39 | 0485 39 pushx_v ushort 83             | push seqReq:ushort
53 | 0486 53 
28 | 0487 28 push_c 98                     | push msgTopo.d16_2
62 | 0488 62 
95 | 0489 95 deref ushort                  | deref ushort
14 | 0490 14 gt                            | gt
7f | 0491 7f ifelse 78 79                  | ifelse True_78 EndIf_79
01 | 0492 .00 addr:496
f0 | 0493 .4e 
02 | 0494 .00 addr:523
0b | 0495 .4f 
e0 | 0496 e0 set16_c ubyte 86 0            | reqTopoBlind = 0
56 | 0497 56 
00 | 0498 00 
f4 | 0499 f4 set_v ushort 83 98            | seqReq = msgTopo.d16_2
53 | 0500 53 
62 | 0501 62 
f4 | 0502 f4 set_v ushort 81 88            | father = msgTopo.source
51 | 0503 51 
58 | 0504 58 
28 | 0505 28 push_c 93                     | push msgTopo.d8_2
5d | 0506 5d 
58 | 0507 58 inc ubyte                     | inc ubyte
f0 | 0508 f0 set_v ubyte 80 93             | hop = msgTopo.d8_2
50 | 0509 50 
5d | 0510 5d 
f4 | 0511 f4 set_v ushort 88 75            | msgTopo.source = nodeId
58 | 0512 58 
4b | 0513 4b 
28 | 0514 28 push_c 87                     | push_c &msgTopo:usrMsg2_t
57 | 0515 57 
19 | 0516 19 func 1                        | push_c &msgTopo:usrMsg2_t
01 | 0517 01 
20 | 0518 20 popx ubyte 79                 | pop stat
4f | 0519 4f 
75 | 0520 75 exec 79                       | goto  79
02 | 0521 .00 addr:523
0b | 0522 .4f 
75 | 0523 75 exec 81                       | goto  81
02 | 0524 .00 addr:526
0e | 0525 .51 
28 | 0526 28 push_c 3                      | push 3
03 | 0527 03 
28 | 0528 28 push_c 87                     | push msgTopo.type
57 | 0529 57 
94 | 0530 94 deref ubyte                   | deref ubyte
10 | 0531 10 eq                            | eq
7f | 0532 7f ifelse 88 89                  | ifelse True_88 EndIf_89
02 | 0533 .00 addr:537
19 | 0534 .58 
02 | 0535 .00 addr:569
39 | 0536 .59 
28 | 0537 28 push_c 0                      | push 0
00 | 0538 00 
38 | 0539 38 pushx_v ubyte 86              | push reqTopoBlind:ubyte
56 | 0540 56 
10 | 0541 10 eq                            | eq
29 | 0542 29 push_c 0xfffe                 | push 0xfffe
ff | 0543 ff 
fe | 0544 fe 
39 | 0545 39 pushx_v ushort 81             | push father:ushort
51 | 0546 51 
11 | 0547 11 neq                           | neq
17 | 0548 17 land                          | land
7f | 0549 7f ifelse 86 87                  | ifelse True_86 EndIf_87
02 | 0550 .00 addr:554
2a | 0551 .56 
02 | 0552 .00 addr:566
36 | 0553 .57 
f4 | 0554 f4 set_v ushort 90 81            | msgTopo.target = father
5a | 0555 5a 
51 | 0556 51 
28 | 0557 28 push_c 87                     | push_c &msgTopo:usrMsg2_t
57 | 0558 57 
19 | 0559 19 func 1                        | push_c &msgTopo:usrMsg2_t
01 | 0560 01 
20 | 0561 20 popx ubyte 79                 | pop stat
4f | 0562 4f 
75 | 0563 75 exec 87                       | goto  87
02 | 0564 .00 addr:566
36 | 0565 .57 
75 | 0566 75 exec 89                       | goto  89
02 | 0567 .00 addr:569
39 | 0568 .59 
75 | 0569 75 exec 91                       | goto  91
02 | 0570 .00 addr:572
3c | 0571 .5b 
75 | 0572 75 exec 58                       | goto  58
01 | 0573 .00 addr:419
a3 | 0574 .3a 
78 | 0575 78 memclr 62 2                   | clear EXT gates for RECEIVE
3e | 0576 3e 
02 | 0577 02 
01 | 0578 01 end                           | end
39 | 0579 39 pushx_v ushort 77             | push baseNode:ushort
4d | 0580 4d 
39 | 0581 39 pushx_v ushort 75             | push nodeId:ushort
4b | 0582 4b 
10 | 0583 10 eq                            | eq
7f | 0584 7f ifelse 104 105                | ifelse True_104 EndIf_105
02 | 0585 .00 addr:589
4d | 0586 .68 
02 | 0587 .00 addr:655
8f | 0588 .69 
e5 | 0589 e5 set16_c ushort 64 97          | await RECEIVE[1]
40 | 0590 40 
02 | 0591 .00 addr:594
52 | 0592 .61 
01 | 0593 01 end                           | end
50 | 0594 50 getextdt_v 87 25              | getExtData msgTopo 25
57 | 0595 57 
19 | 0596 19 
28 | 0597 28 push_c 3                      | push 3
03 | 0598 03 
28 | 0599 28 push_c 87                     | push msgTopo.type
57 | 0600 57 
94 | 0601 94 deref ubyte                   | deref ubyte
10 | 0602 10 eq                            | eq
7f | 0603 7f ifelse 102 103                | ifelse True_102 EndIf_103
02 | 0604 .00 addr:608
60 | 0605 .66 
02 | 0606 .00 addr:643
83 | 0607 .67 
e0 | 0608 e0 set16_c ubyte 87 1            | msgTopo.type = 1
57 | 0609 57 
01 | 0610 01 
f4 | 0611 f4 set_v ushort 88 75            | msgTopo.source = nodeId
58 | 0612 58 
4b | 0613 4b 
e5 | 0614 e5 set16_c ushort 90 0xffff      | msgTopo.target = 0xffff
5a | 0615 5a 
ff | 0616 ff 
ff | 0617 ff 
e0 | 0618 e0 set16_c ubyte 93 0            | msgTopo.d8_2 = 0
5d | 0619 5d 
00 | 0620 00 
28 | 0621 28 push_c 83                     | push &seqReq
53 | 0622 53 
59 | 0623 59 inc ushort                    | inc ushort
f4 | 0624 f4 set_v ushort 98 83            | msgTopo.d16_2 = seqReq
62 | 0625 62 
53 | 0626 53 
28 | 0627 28 push_c 87                     | push_c &msgTopo:usrMsg2_t
57 | 0628 57 
19 | 0629 19 func 1                        | push_c &msgTopo:usrMsg2_t
01 | 0630 01 
20 | 0631 20 popx ubyte 79                 | pop stat
4f | 0632 4f 
a5 | 0633 a5 clken_c 4 2000 101            | clock enable Awake_2000_101 2000msec
04 | 0634 04 
07 | 0635 07 
d0 | 0636 d0 
02 | 0637 .00 addr:640
80 | 0638 .65 
01 | 0639 01 end                           | end
75 | 0640 75 exec 103                      | goto  103
02 | 0641 .00 addr:643
83 | 0642 .67 
75 | 0643 75 exec 94                       | goto  94
02 | 0644 .00 addr:589
4d | 0645 .5e 
78 | 0646 78 memclr 32 8                   | clear WClocks gates from 4 to 5
20 | 0647 20 
08 | 0648 08 
78 | 0649 78 memclr 62 2                   | clear EXT gates for RECEIVE
3e | 0650 3e 
02 | 0651 02 
75 | 0652 75 exec 105                      | goto  105
02 | 0653 .00 addr:655
8f | 0654 .69 
01 | 0655 01 end                           | end
39 | 0656 39 pushx_v ushort 77             | push baseNode:ushort
4d | 0657 4d 
39 | 0658 39 pushx_v ushort 75             | push nodeId:ushort
4b | 0659 4b 
11 | 0660 11 neq                           | neq
7f | 0661 7f ifelse 117 118                | ifelse True_117 EndIf_118
02 | 0662 .00 addr:666
9a | 0663 .75 
02 | 0664 .00 addr:716
cc | 0665 .76 
e5 | 0666 e5 set16_c ushort 72 111         | await CUSTOM_A[0]
48 | 0667 48 
02 | 0668 .00 addr:671
9f | 0669 .6f 
01 | 0670 01 end                           | end
29 | 0671 29 push_c 0xfffe                 | push 0xfffe
ff | 0672 ff 
fe | 0673 fe 
39 | 0674 39 pushx_v ushort 81             | push father:ushort
51 | 0675 51 
10 | 0676 10 eq                            | eq
7f | 0677 7f ifelse 115 116                | ifelse True_115 EndIf_116
02 | 0678 .00 addr:682
aa | 0679 .73 
02 | 0680 .00 addr:707
c3 | 0681 .74 
e0 | 0682 e0 set16_c ubyte 87 3            | msgTopo.type = 3
57 | 0683 57 
03 | 0684 03 
f4 | 0685 f4 set_v ushort 88 75            | msgTopo.source = nodeId
58 | 0686 58 
4b | 0687 4b 
e5 | 0688 e5 set16_c ushort 90 0xffff      | msgTopo.target = 0xffff
5a | 0689 5a 
ff | 0690 ff 
ff | 0691 ff 
28 | 0692 28 push_c 83                     | push &seqReq
53 | 0693 53 
59 | 0694 59 inc ushort                    | inc ushort
f4 | 0695 f4 set_v ushort 98 83            | msgTopo.d16_2 = seqReq
62 | 0696 62 
53 | 0697 53 
28 | 0698 28 push_c 87                     | push_c &msgTopo:usrMsg2_t
57 | 0699 57 
19 | 0700 19 func 1                        | push_c &msgTopo:usrMsg2_t
01 | 0701 01 
20 | 0702 20 popx ubyte 79                 | pop stat
4f | 0703 4f 
75 | 0704 75 exec 116                      | goto  116
02 | 0705 .00 addr:707
c3 | 0706 .74 
75 | 0707 75 exec 108                      | goto  108
02 | 0708 .00 addr:666
9a | 0709 .6c 
78 | 0710 78 memclr 72 2                   | clear EXT gates for CUSTOM_A
48 | 0711 48 
02 | 0712 02 
75 | 0713 75 exec 118                      | goto  118
02 | 0714 .00 addr:716
cc | 0715 .76 
01 | 0716 01 end                           | end
e0 | 0717 e0 set16_c ubyte 162 1           | ack = 1
a2 | 0718 a2 
01 | 0719 01 
e0 | 0720 e0 set16_c ubyte 163 0           | reply = 0
a3 | 0721 a3 
00 | 0722 00 
e5 | 0723 e5 set16_c ushort 68 124         | await Q_READY[0]
44 | 0724 44 
02 | 0725 .00 addr:728
d8 | 0726 .7c 
01 | 0727 01 end                           | end
28 | 0728 28 push_c 0                      | push 0
00 | 0729 00 
19 | 0730 19 func 3                        | Awake_Q_READY_124:
03 | 0731 03 
14 | 0732 14 gt                            | gt
7f | 0733 7f ifelse 154 155                | ifelse True_154 False_155
02 | 0734 .00 addr:738
e2 | 0735 .9a 
03 | 0736 .00 addr:858
5a | 0737 .9b 
e0 | 0738 e0 set16_c ubyte 163 0           | reply = 0
a3 | 0739 a3 
00 | 0740 00 
28 | 0741 28 push_c 112                    | push &msgRadio
70 | 0742 70 
19 | 0743 19 func 2                        | push &msgRadio
02 | 0744 02 
20 | 0745 20 popx ubyte 79                 | pop stat
4f | 0746 4f 
29 | 0747 29 push_c 0xffff                 | push 0xffff
ff | 0748 ff 
ff | 0749 ff 
28 | 0750 28 push_c 115                    | push msgRadio.target
73 | 0751 73 
95 | 0752 95 deref ushort                  | deref ushort
10 | 0753 10 eq                            | eq
7f | 0754 7f ifelse 151 152                | ifelse True_151 False_152
02 | 0755 .00 addr:759
f7 | 0756 .97 
03 | 0757 .00 addr:771
03 | 0758 .98 
28 | 0759 28 push_c 112                    | push_c &msgRadio:usrMsg2_t
70 | 0760 70 
1b | 0761 1b outevt_e 8                    | emit SEND
08 | 0762 08 
e5 | 0763 e5 set16_c ushort 54 132         | await SEND_DONE[0]
36 | 0764 36 
03 | 0765 .00 addr:768
00 | 0766 .84 
01 | 0767 01 end                           | end
75 | 0768 75 exec 153                      | goto  153
03 | 0769 .00 addr:855
57 | 0770 .99 
38 | 0771 38 pushx_v ubyte 163             | push reply:ubyte
a3 | 0772 a3 
28 | 0773 28 push_c 117                    | push msgRadio.d8_1
75 | 0774 75 
94 | 0775 94 deref ubyte                   | deref ubyte
07 | 0776 07 add                           | add
20 | 0777 20 popx ubyte 117                | pop msgRadio.d8_1
75 | 0778 75 
28 | 0779 28 push_c 112                    | push_c &msgRadio:usrMsg2_t
70 | 0780 70 
1b | 0781 1b outevt_e 9                    | emit SEND_ACK
09 | 0782 09 
e5 | 0783 e5 set16_c ushort 58 141         | await SEND_DONE_ACK[0]
3a | 0784 3a 
03 | 0785 .00 addr:788
14 | 0786 .8d 
01 | 0787 01 end                           | end
50 | 0788 50 getextdt_v 162 1              | getExtData ack 1
a2 | 0789 a2 
01 | 0790 01 
28 | 0791 28 push_c 163                    | push &reply
a3 | 0792 a3 
58 | 0793 58 inc ubyte                     | inc ubyte
28 | 0794 28 push_c 20                     | push 20
14 | 0795 14 
38 | 0796 38 pushx_v ubyte 163             | push reply:ubyte
a3 | 0797 a3 
14 | 0798 14 gt                            | gt
7f | 0799 7f ifelse 145 146                | ifelse True_145 EndIf_146
03 | 0800 .00 addr:804
24 | 0801 .91 
03 | 0802 .00 addr:819
33 | 0803 .92 
e5 | 0804 e5 set16_c ushort 81 0xfffe      | father = 0xfffe
51 | 0805 51 
ff | 0806 ff 
fe | 0807 fe 
68 | 0808 68 outevt_c 18 1                 | emit REQ_CUSTOM_A len=1 const=1
12 | 0809 12 
01 | 0810 01 
87 | 0811 87 tkins_z 1 17 135              | insert track Loop_out_135 tree 17
11 | 0812 11 
03 | 0813 .00 addr:846
4e | 0814 .87 
01 | 0815 01 end                           | end
75 | 0816 75 exec 146                      | goto  146
03 | 0817 .00 addr:819
33 | 0818 .92 
28 | 0819 28 push_c 1                      | push 1
01 | 0820 01 
38 | 0821 38 pushx_v ubyte 162             | push ack:ubyte
a2 | 0822 a2 
10 | 0823 10 eq                            | eq
7f | 0824 7f ifelse 148 149                | ifelse True_148 EndIf_149
03 | 0825 .00 addr:829
3d | 0826 .94 
03 | 0827 .00 addr:837
45 | 0828 .95 
87 | 0829 87 tkins_z 1 17 135              | insert track Loop_out_135 tree 17
11 | 0830 11 
03 | 0831 .00 addr:846
4e | 0832 .87 
01 | 0833 01 end                           | end
75 | 0834 75 exec 149                      | goto  149
03 | 0835 .00 addr:837
45 | 0836 .95 
a4 | 0837 a4 clken_c 5 50 150              | clock enable Awake_50_150 50msec
05 | 0838 05 
32 | 0839 32 
03 | 0840 .00 addr:843
4b | 0841 .96 
01 | 0842 01 end                           | end
75 | 0843 75 exec 133                      | goto  133
03 | 0844 .00 addr:771
03 | 0845 .85 
78 | 0846 78 memclr 40 8                   | clear WClocks gates from 5 to 6
28 | 0847 28 
08 | 0848 08 
78 | 0849 78 memclr 58 2                   | clear EXT gates for SEND_DONE_ACK
3a | 0850 3a 
02 | 0851 02 
75 | 0852 75 exec 153                      | goto  153
03 | 0853 .00 addr:855
57 | 0854 .99 
75 | 0855 75 exec 156                      | goto  156
03 | 0856 .00 addr:866
62 | 0857 .9c 
87 | 0858 87 tkins_z 1 10 127              | insert track Loop_out_127 tree 10
0a | 0859 0a 
03 | 0860 .00 addr:869
65 | 0861 .7f 
01 | 0862 01 end                           | end
75 | 0863 75 exec 156                      | goto  156
03 | 0864 .00 addr:866
62 | 0865 .9c 
75 | 0866 75 exec 125                      | goto  125
02 | 0867 .00 addr:728
d8 | 0868 .7d 
78 | 0869 78 memclr 40 8                   | clear WClocks gates from 5 to 6
28 | 0870 28 
08 | 0871 08 
78 | 0872 78 memclr 54 2                   | clear EXT gates for SEND_DONE
36 | 0873 36 
02 | 0874 02 
78 | 0875 78 memclr 58 2                   | clear EXT gates for SEND_DONE_ACK
3a | 0876 3a 
02 | 0877 02 
75 | 0878 75 exec 121                      | goto  121
02 | 0879 .00 addr:723
d3 | 0880 .79 
78 | 0881 78 memclr 40 8                   | clear WClocks gates from 5 to 6
28 | 0882 28 
08 | 0883 08 
78 | 0884 78 memclr 54 2                   | clear EXT gates for SEND_DONE
36 | 0885 36 
02 | 0886 02 
78 | 0887 78 memclr 58 2                   | clear EXT gates for SEND_DONE_ACK
3a | 0888 3a 
02 | 0889 02 
78 | 0890 78 memclr 68 2                   | clear EXT gates for Q_READY
44 | 0891 44 
02 | 0892 02 
01 | 0893 01 end                           | end
01 | 0894 01 end                           | end
78 | 0895 78 memclr 0 48                   | clear WClocks gates from 0 to 6
00 | 0896 00 
30 | 0897 30 
01 | 0898 01 end                           | end program
01 | 0899 01 end                           | end
