214 899 7 7 0 0 56 6 56 925
00 | 00000 0 track 0
00 | 00001 0
00 | 00002 0
00 | 00003 0
00 | 00004 0 track 1
00 | 00005 0
00 | 00006 0
00 | 00007 0
00 | 00008 0 track 2
00 | 00009 0
00 | 00010 0
00 | 00011 0
00 | 00012 0 track 3
00 | 00013 0
00 | 00014 0
00 | 00015 0
00 | 00016 0 track 4
00 | 00017 0
00 | 00018 0
00 | 00019 0
00 | 00020 0 track 5
00 | 00021 0
00 | 00022 0
00 | 00023 0
00 | 00024 0 track 6
00 | 00025 0
00 | 00026 0
00 | 00027 0
00 | 00028 0 track 7
00 | 00029 0
00 | 00030 0
00 | 00031 0
00 | 00032 0000 wClock 0
00 | 00033 0001
00 | 00034 0002
00 | 00035 0003
00 | 00036 0004
00 | 00037 0005
00 | 00038 0006
00 | 00039 0007
00 | 00040 0008 wClock 1
00 | 00041 0009
00 | 00042 0010
00 | 00043 0011
00 | 00044 0012
00 | 00045 0013
00 | 00046 0014
00 | 00047 0015
00 | 00048 0016 wClock 2
00 | 00049 0017
00 | 00050 0018
00 | 00051 0019
00 | 00052 0020
00 | 00053 0021
00 | 00054 0022
00 | 00055 0023
00 | 00056 0024 wClock 3
00 | 00057 0025
00 | 00058 0026
00 | 00059 0027
00 | 00060 0028
00 | 00061 0029
00 | 00062 0030
00 | 00063 0031
00 | 00064 0032 wClock 4
00 | 00065 0033
00 | 00066 0034
00 | 00067 0035
00 | 00068 0036
00 | 00069 0037
00 | 00070 0038
00 | 00071 0039
00 | 00072 0040 wClock 5
00 | 00073 0041
00 | 00074 0042
00 | 00075 0043
00 | 00076 0044
00 | 00077 0045
00 | 00078 0046
00 | 00079 0047
00 | 00080 0048 wClock 6
00 | 00081 0049
00 | 00082 0050
00 | 00083 0051
00 | 00084 0052
00 | 00085 0053
00 | 00086 0054
00 | 00087 0055
00 | 00088 0056 inEvt 005 : TEMP
00 | 00089 0057           : 01 gates
00 | 00090 0058
00 | 00091 0059
00 | 00092 0060 inEvt 013 : CUSTOM_A
00 | 00093 0061           : 01 gates
00 | 00094 0062
00 | 00095 0063
00 | 00096 0064 inEvt 040 : SEND_DONE()
00 | 00097 0065           : 01 gates
00 | 00098 0066
00 | 00099 0067
00 | 00100 0068
00 | 00101 0069 inEvt 042 : SEND_DONE_ACK()
00 | 00102 0070           : 01 gates
00 | 00103 0071
00 | 00104 0072
00 | 00105 0073
00 | 00106 0074 inEvt 044 : RECEIVE()
00 | 00107 0075           : 04 gates
00 | 00108 0076
00 | 00109 0077
00 | 00110 0078
00 | 00111 0079
00 | 00112 0080
00 | 00113 0081
00 | 00114 0082
00 | 00115 0083
00 | 00116 0084
00 | 00117 0085
00 | 00118 0086
00 | 00119 0087
00 | 00120 0088 inEvt 046 : Q_READY
00 | 00121 0089           : 01 gates
00 | 00122 0090
00 | 00123 0091
00 | 00124 0092 $ret:1, 
00 | 00125 0093 nodeId:2, 
00 | 00126 0094 
00 | 00127 0095 baseNode:2, 
00 | 00128 0096 
00 | 00129 0097 stat:1, 
00 | 00130 0098 hop:1, 
00 | 00131 0099 father:2, 
00 | 00132 0100 
00 | 00133 0101 seqReq:2, 
00 | 00134 0102 
00 | 00135 0103 seqData:1, 
00 | 00136 0104 reqTopoBlind:1, 
00 | 00137 0105 msgTopo:25, 
00 | 00138 0106 
00 | 00139 0107 
00 | 00140 0108 
00 | 00141 0109 
00 | 00142 0110 
00 | 00143 0111 
00 | 00144 0112 
00 | 00145 0113 
00 | 00146 0114 
00 | 00147 0115 
00 | 00148 0116 
00 | 00149 0117 
00 | 00150 0118 
00 | 00151 0119 
00 | 00152 0120 
00 | 00153 0121 
00 | 00154 0122 
00 | 00155 0123 
00 | 00156 0124 
00 | 00157 0125 
00 | 00158 0126 
00 | 00159 0127 
00 | 00160 0128 
00 | 00161 0129 
00 | 00162 0130 msgRadio:25, 
00 | 00163 0131 
00 | 00164 0132 
00 | 00165 0133 
00 | 00166 0134 
00 | 00167 0135 
00 | 00168 0136 
00 | 00169 0137 
00 | 00170 0138 
00 | 00171 0139 
00 | 00172 0140 
00 | 00173 0141 
00 | 00174 0142 
00 | 00175 0143 
00 | 00176 0144 
00 | 00177 0145 
00 | 00178 0146 
00 | 00179 0147 
00 | 00180 0148 
00 | 00181 0149 
00 | 00182 0150 
00 | 00183 0151 
00 | 00184 0152 
00 | 00185 0153 
00 | 00186 0154 
00 | 00187 0155 msgData:25, 
00 | 00188 0156 
00 | 00189 0157 
00 | 00190 0158 
00 | 00191 0159 
00 | 00192 0160 
00 | 00193 0161 
00 | 00194 0162 
00 | 00195 0163 
00 | 00196 0164 
00 | 00197 0165 
00 | 00198 0166 
00 | 00199 0167 
00 | 00200 0168 
00 | 00201 0169 
00 | 00202 0170 
00 | 00203 0171 
00 | 00204 0172 
00 | 00205 0173 
00 | 00206 0174 
00 | 00207 0175 
00 | 00208 0176 
00 | 00209 0177 
00 | 00210 0178 
00 | 00211 0179 
00 | 00212 0180 ack:1, 
00 | 00213 0181 reply:1, 
d1 | 00214 d1 set_c ushort 56 1281          | config gate TEMP with 1 await(s) - 0x0501 = 1281
38 | 00215 38 
05 | 00216 05 
01 | 00217 01 
d1 | 00218 d1 set_c ushort 60 3329          | config gate CUSTOM_A with 1 await(s) - 0x0d01 = 3329
3c | 00219 3c 
0d | 00220 0d 
01 | 00221 01 
d1 | 00222 d1 set_c ushort 64 10369         | config gate SEND_DONE() with 1 await(s) - 0x2881 = 10369
40 | 00223 40 
28 | 00224 28 
81 | 00225 81 
d1 | 00226 d1 set_c ushort 69 10881         | config gate SEND_DONE_ACK() with 1 await(s) - 0x2a81 = 10881
45 | 00227 45 
2a | 00228 2a 
81 | 00229 81 
d1 | 00230 d1 set_c ushort 74 11396         | config gate RECEIVE() with 4 await(s) - 0x2c84 = 11396
4a | 00231 4a 
2c | 00232 2c 
84 | 00233 84 
d1 | 00234 d1 set_c ushort 88 11777         | config gate Q_READY with 1 await(s) - 0x2e01 = 11777
58 | 00235 58 
2e | 00236 2e 
01 | 00237 01 
40 | 00238 40 push_c 0                      | push 0
00 | 00239 00 
24 | 00240 24 func 17                       | func setRFPower
11 | 00241 11 
17 | 00242 17 popx                          | popx 
24 | 00243 24 func 0                        | func getNodeId
00 | 00244 00 
a1 | 00245 a1 pop ushort 93                 | pop nodeId
5d | 00246 5d 
c1 | 00247 c1 set_c ushort 95 1             | baseNode = 1
5f | 00248 5f 
01 | 00249 01 
d1 | 00250 d1 set_c ushort 99 0xfffe        | father = 0xfffe
63 | 00251 63 
ff | 00252 ff 
fe | 00253 fe 
c1 | 00254 c1 set_c ushort 101 0            | seqReq = 0
65 | 00255 65 
00 | 00256 00 
c0 | 00257 c0 set_c ubyte 103 0             | seqData = 0
67 | 00258 67 
00 | 00259 00 
c0 | 00260 c0 set_c ubyte 104 0             | reqTopoBlind = 0
68 | 00261 68 
00 | 00262 00 
c0 | 00263 c0 set_c ubyte 155 2             | msgData.type = 2
9b | 00264 9b 
02 | 00265 02 
2a | 00266 2a set_v ushort 156 ushort 93    | msgData.source = nodeId
11 | 00267 11 
9c | 00268 9c 
5d | 00269 5d 
2a | 00270 2a set_v ushort 168 ushort 93    | msgData.d16_3 = nodeId
11 | 00271 11 
a8 | 00272 a8 
5d | 00273 5d 
58 | 00274 58 outevt_c 5 7                  | emit LEDS len=1 const=7
05 | 00275 05 
07 | 00276 07 
29 | 00277 29 clken_c 0 2000 16             | clock enable Awake_2000_16 2000msec
03 | 00278 03 
00 | 00279 00 
07 | 00280 07 
d0 | 00281 d0 
01 | 00282 .00 addr:285
1d | 00283 .10 
01 | 00284 01 end                           | end
2a | 00285 2a set_v ushort 106 ushort 93    | msgTopo.source = nodeId
11 | 00286 11 
6a | 00287 6a 
5d | 00288 5d 
91 | 00289 91 push_v ushort 95              | push baseNode:ushort
5f | 00290 5f 
91 | 00291 91 push_v ushort 93              | push nodeId:ushort
5d | 00292 5d 
0f | 00293 0f eq                            | eq
4f | 00294 4f ifelse 20 21                  | ifelse True_20 False_21
01 | 00295 .00 addr:299
2b | 00296 .14 
01 | 00297 .00 addr:308
34 | 00298 .16 
c1 | 00299 c1 set_c ushort 99 0             | father = 0
63 | 00300 63 
00 | 00301 00 
c1 | 00302 c1 set_c ushort 101 1            | seqReq = 1
65 | 00303 65 
01 | 00304 01 
39 | 00305 39 exec 22                       | goto  22
01 | 00306 .00 addr:308
34 | 00307 .16 
89 | 00308 89 tkins_max 0 23                | insert track ParEver_sub_1_23
01 | 00309 .00 addr:324
44 | 00310 .17 
89 | 00311 89 tkins_max 0 24                | insert track ParEver_sub_2_24
01 | 00312 .00 addr:445
bd | 00313 .18 
89 | 00314 89 tkins_max 0 25                | insert track ParEver_sub_3_25
01 | 00315 .00 addr:485
e5 | 00316 .19 
89 | 00317 89 tkins_max 0 26                | insert track ParEver_sub_4_26
02 | 00318 .00 addr:662
96 | 00319 .1a 
89 | 00320 89 tkins_max 0 27                | insert track ParEver_sub_5_27
02 | 00321 .00 addr:719
cf | 00322 .1b 
01 | 00323 01 end                           | end
29 | 00324 29 clken_c 1 2000 31             | clock enable Awake_2000_31 2000msec
03 | 00325 03 
01 | 00326 01 
07 | 00327 07 
d0 | 00328 d0 
01 | 00329 .00 addr:332
4c | 00330 .1f 
01 | 00331 01 end                           | end
58 | 00332 58 outevt_c 20 1                 | emit REQ_CUSTOM_A len=1 const=1
14 | 00333 14 
01 | 00334 01 
89 | 00335 89 tkins_max 0 37                | insert track ParOr_sub_1_37
01 | 00336 .00 addr:342
56 | 00337 .25 
89 | 00338 89 tkins_max 0 38                | insert track ParOr_sub_2_38
01 | 00339 .00 addr:354
62 | 00340 .26 
01 | 00341 01 end                           | end
29 | 00342 29 clken_c 2 30000 40            | clock enable Awake_30000_40 30000msec
03 | 00343 03 
02 | 00344 02 
75 | 00345 75 
30 | 00346 30 
01 | 00347 .00 addr:350
5e | 00348 .28 
01 | 00349 01 end                           | end
89 | 00350 89 tkins_max 0 39                | insert track ParOr_out_39
01 | 00351 .00 addr:429
ad | 00352 .27 
01 | 00353 01 end                           | end
29 | 00354 29 clken_c 3 10000 41            | clock enable Awake_10000_41 10000msec
03 | 00355 03 
03 | 00356 03 
27 | 00357 27 
10 | 00358 10 
01 | 00359 .00 addr:362
6a | 00360 .29 
01 | 00361 01 end                           | end
26 | 00362 26 outevt_z 9                    | emit REQ_TEMP
09 | 00363 09 
d1 | 00364 d1 set_c ushort 58 44            | await TEMP[0]
3a | 00365 3a 
01 | 00366 .00 addr:369
71 | 00367 .2c 
01 | 00368 01 end                           | end
40 | 00369 40 push_c 164                    | push msgData.d16_1
a4 | 00370 a4 
34 | 00371 34 getextdt_e 2                  | getExtData stack len=2
02 | 00372 02 
41 | 00373 41 push_c 0xfffe                 | push 0xfffe
ff | 00374 ff 
fe | 00375 fe 
91 | 00376 91 push_v ushort 99              | push father:ushort
63 | 00377 63 
10 | 00378 10 neq                           | neq
4f | 00379 4f ifelse 54 55                  | ifelse True_54 False_55
01 | 00380 .00 addr:384
80 | 00381 .36 
01 | 00382 .00 addr:421
a5 | 00383 .37 
2a | 00384 2a set_v ushort 158 ushort 99    | msgData.target = father
11 | 00385 11 
9e | 00386 9e 
63 | 00387 63 
40 | 00388 40 push_c 103                    | push &seqData
67 | 00389 67 
60 | 00390 60 inc ubyte                     | inc ubyte
2a | 00391 2a set_v ubyte 162 ubyte 103     | msgData.d8_3 = seqData
00 | 00392 00 
a2 | 00393 a2 
67 | 00394 67 
2a | 00395 2a set_v ushort 170 ushort 99    | msgData.d16_4 = father
11 | 00396 11 
aa | 00397 aa 
63 | 00398 63 
2a | 00399 2a set_v ubyte 161 ubyte 104     | msgData.d8_2 = reqTopoBlind
00 | 00400 00 
a1 | 00401 a1 
68 | 00402 68 
40 | 00403 40 push_c 100                    | push 100
64 | 00404 64 
91 | 00405 91 push_v ushort 93              | push nodeId:ushort
5d | 00406 5d 
08 | 00407 08 mult                          | mult
27 | 00408 27 clken_e 4 0 51                | clock enable Awake_exp_51 (stack)ms
01 | 00409 01 
04 | 00410 04 
01 | 00411 .00 addr:414
9e | 00412 .33 
01 | 00413 01 end                           | end
40 | 00414 40 push_c 155                    | push_c &msgData:usrMsg2_t
9b | 00415 9b 
24 | 00416 24 func 10                       | func qPut
0a | 00417 0a 
a0 | 00418 a0 pop ubyte 97                  | pop stat
61 | 00419 61 
01 | 00420 01 end                           | end
58 | 00421 58 outevt_c 20 1                 | emit REQ_CUSTOM_A len=1 const=1
14 | 00422 14 
01 | 00423 01 
01 | 00424 01 end                           | end
89 | 00425 89 tkins_max 0 39                | insert track ParOr_out_39
01 | 00426 .00 addr:429
ad | 00427 .27 
01 | 00428 01 end                           | end
48 | 00429 48 memclr 16 24                  | clear WClocks gates from 2 to 5
10 | 00430 10 
18 | 00431 18 
48 | 00432 48 memclr 58 2                   | clear EXT gates for TEMP[0]
3a | 00433 3a 
02 | 00434 02 
39 | 00435 39 exec 34                       | goto  34
01 | 00436 .00 addr:335
4f | 00437 .22 
48 | 00438 48 memclr 16 24                  | clear WClocks gates from 2 to 5
10 | 00439 10 
18 | 00440 18 
48 | 00441 48 memclr 58 2                   | clear EXT gates for TEMP[0]
3a | 00442 3a 
02 | 00443 02 
01 | 00444 01 end                           | end
40 | 00445 40 push_c 2                      | push 2
02 | 00446 02 
a0 | 00447 a0 pop ubyte 76                  | evt RECEIVE() auxId = pop
4c | 00448 4c 
d1 | 00449 d1 set_c ushort 77 60            | await RECEIVE()[0]
4d | 00450 4d 
01 | 00451 .00 addr:454
c6 | 00452 .3c 
01 | 00453 01 end                           | end
5c | 00454 5c getextdt_v 105 25             | getExtData msgTopo 25
69 | 00455 69 
19 | 00456 19 
41 | 00457 41 push_c 0xfffe                 | push 0xfffe
ff | 00458 ff 
fe | 00459 fe 
91 | 00460 91 push_v ushort 99              | push father:ushort
63 | 00461 63 
10 | 00462 10 neq                           | neq
4f | 00463 4f ifelse 63 64                  | ifelse True_63 EndIf_64
01 | 00464 .00 addr:468
d4 | 00465 .3f 
01 | 00466 .00 addr:445
bd | 00467 .39 
2a | 00468 2a set_v ushort 108 ushort 99    | msgTopo.target = father
11 | 00469 11 
6c | 00470 6c 
63 | 00471 63 
40 | 00472 40 push_c 105                    | push_c &msgTopo:usrMsg2_t
69 | 00473 69 
24 | 00474 24 func 10                       | func qPut
0a | 00475 0a 
a0 | 00476 a0 pop ubyte 97                  | pop stat
61 | 00477 61 
39 | 00478 39 exec 64                       | goto  64
01 | 00479 .00 addr:445
bd | 00480 .39 
48 | 00481 48 memclr 76 3                   | clear EXT gates for RECEIVE()[0]
4c | 00482 4c 
03 | 00483 03 
01 | 00484 01 end                           | end
91 | 00485 91 push_v ushort 95              | push baseNode:ushort
5f | 00486 5f 
91 | 00487 91 push_v ushort 93              | push nodeId:ushort
5d | 00488 5d 
10 | 00489 10 neq                           | neq
4f | 00490 4f ifelse 101 102                | ifelse True_101 False_102
01 | 00491 .00 addr:495
ef | 00492 .65 
02 | 00493 .00 addr:608
60 | 00494 .66 
89 | 00495 89 tkins_max 0 67                | insert track ParEver_sub_1_67
01 | 00496 .00 addr:502
f6 | 00497 .43 
89 | 00498 89 tkins_max 0 68                | insert track ParEver_sub_2_68
02 | 00499 .00 addr:562
32 | 00500 .44 
01 | 00501 01 end                           | end
40 | 00502 40 push_c 1                      | push 1
01 | 00503 01 
a0 | 00504 a0 pop ubyte 79                  | evt RECEIVE() auxId = pop
4f | 00505 4f 
d1 | 00506 d1 set_c ushort 80 75            | await RECEIVE()[1]
50 | 00507 50 
01 | 00508 .00 addr:511
ff | 00509 .4b 
01 | 00510 01 end                           | end
5c | 00511 5c getextdt_v 105 25             | getExtData msgTopo 25
69 | 00512 69 
19 | 00513 19 
40 | 00514 40 push_c 0                      | push 0
00 | 00515 00 
91 | 00516 91 push_v ushort 116                    | push msgTopo.d16_2 [Optm:: push_c addr + deref]
74 | 00517 74 
11 | 00518 11 gte                           | gte
4f | 00519 4f ifelse 83 84                  | ifelse True_83 EndIf_84
02 | 00520 .00 addr:524
0c | 00521 .53 
01 | 00522 .00 addr:502
f6 | 00523 .48 
58 | 00524 58 outevt_c 6 0                  | emit LED0 len=1 const=0
06 | 00525 06 
00 | 00526 00 
c0 | 00527 c0 set_c ubyte 104 0             | reqTopoBlind = 0
68 | 00528 68 
00 | 00529 00 
2a | 00530 2a set_v ushort 101 ushort 116   | seqReq = msgTopo.d16_2
11 | 00531 11 
65 | 00532 65 
74 | 00533 74 
2a | 00534 2a set_v ushort 99 ushort 106    | father = msgTopo.source
11 | 00535 11 
63 | 00536 63 
6a | 00537 6a 
40 | 00538 40 push_c 111                    | push msgTopo.d8_2
6f | 00539 6f 
60 | 00540 60 inc ubyte                     | inc ubyte
2a | 00541 2a set_v ubyte 98 ubyte 111      | hop = msgTopo.d8_2
00 | 00542 00 
62 | 00543 62 
6f | 00544 6f 
2a | 00545 2a set_v ushort 106 ushort 93    | msgTopo.source = nodeId
11 | 00546 11 
6a | 00547 6a 
5d | 00548 5d 
40 | 00549 40 push_c 105                    | push_c &msgTopo:usrMsg2_t
69 | 00550 69 
24 | 00551 24 func 10                       | func qPut
0a | 00552 0a 
a0 | 00553 a0 pop ubyte 97                  | pop stat
61 | 00554 61 
39 | 00555 39 exec 84                       | goto  84
01 | 00556 .00 addr:502
f6 | 00557 .48 
48 | 00558 48 memclr 79 3                   | clear EXT gates for RECEIVE()[1]
4f | 00559 4f 
03 | 00560 03 
01 | 00561 01 end                           | end
40 | 00562 40 push_c 3                      | push 3
03 | 00563 03 
a0 | 00564 a0 pop ubyte 82                  | evt RECEIVE() auxId = pop
52 | 00565 52 
d1 | 00566 d1 set_c ushort 83 88            | await RECEIVE()[2]
53 | 00567 53 
02 | 00568 .00 addr:571
3b | 00569 .58 
01 | 00570 01 end                           | end
5c | 00571 5c getextdt_v 105 25             | getExtData msgTopo 25
69 | 00572 69 
19 | 00573 19 
40 | 00574 40 push_c 0                      | push 0
00 | 00575 00 
90 | 00576 90 push_v ubyte 104              | push reqTopoBlind:ubyte
68 | 00577 68 
0f | 00578 0f eq                            | eq
41 | 00579 41 push_c 0xfffe                 | push 0xfffe
ff | 00580 ff 
fe | 00581 fe 
91 | 00582 91 push_v ushort 99              | push father:ushort
63 | 00583 63 
10 | 00584 10 neq                           | neq
16 | 00585 16 land                          | land
4f | 00586 4f ifelse 92 93                  | ifelse True_92 EndIf_93
02 | 00587 .00 addr:591
4f | 00588 .5c 
02 | 00589 .00 addr:562
32 | 00590 .55 
2a | 00591 2a set_v ushort 108 ushort 99    | msgTopo.target = father
11 | 00592 11 
6c | 00593 6c 
63 | 00594 63 
40 | 00595 40 push_c 105                    | push_c &msgTopo:usrMsg2_t
69 | 00596 69 
24 | 00597 24 func 10                       | func qPut
0a | 00598 0a 
a0 | 00599 a0 pop ubyte 97                  | pop stat
61 | 00600 61 
39 | 00601 39 exec 93                       | goto  93
02 | 00602 .00 addr:562
32 | 00603 .55 
48 | 00604 48 memclr 82 3                   | clear EXT gates for RECEIVE()[2]
52 | 00605 52 
03 | 00606 03 
01 | 00607 01 end                           | end
40 | 00608 40 push_c 3                      | push 3
03 | 00609 03 
a0 | 00610 a0 pop ubyte 85                  | evt RECEIVE() auxId = pop
55 | 00611 55 
d1 | 00612 d1 set_c ushort 86 97            | await RECEIVE()[3]
56 | 00613 56 
02 | 00614 .00 addr:617
69 | 00615 .61 
01 | 00616 01 end                           | end
5c | 00617 5c getextdt_v 105 25             | getExtData msgTopo 25
69 | 00618 69 
19 | 00619 19 
c0 | 00620 c0 set_c ubyte 105 1             | msgTopo.type = 1
69 | 00621 69 
01 | 00622 01 
2a | 00623 2a set_v ushort 106 ushort 93    | msgTopo.source = nodeId
11 | 00624 11 
6a | 00625 6a 
5d | 00626 5d 
d1 | 00627 d1 set_c ushort 108 0xffff       | msgTopo.target = 0xffff
6c | 00628 6c 
ff | 00629 ff 
ff | 00630 ff 
c0 | 00631 c0 set_c ubyte 111 0             | msgTopo.d8_2 = 0
6f | 00632 6f 
00 | 00633 00 
40 | 00634 40 push_c 101                    | push &seqReq
65 | 00635 65 
61 | 00636 61 inc ushort                    | inc ushort
2a | 00637 2a set_v ushort 116 ushort 101   | msgTopo.d16_2 = seqReq
11 | 00638 11 
74 | 00639 74 
65 | 00640 65 
40 | 00641 40 push_c 105                    | push_c &msgTopo:usrMsg2_t
69 | 00642 69 
24 | 00643 24 func 10                       | func qPut
0a | 00644 0a 
a0 | 00645 a0 pop ubyte 97                  | pop stat
61 | 00646 61 
29 | 00647 29 clken_c 5 2000 100            | clock enable Awake_2000_100 2000msec
03 | 00648 03 
05 | 00649 05 
07 | 00650 07 
d0 | 00651 d0 
02 | 00652 .00 addr:608
60 | 00653 .5e 
01 | 00654 01 end                           | end
48 | 00655 48 memclr 40 8                   | clear WClocks gates from 5 to 6
28 | 00656 28 
08 | 00657 08 
48 | 00658 48 memclr 85 3                   | clear EXT gates for RECEIVE()[3]
55 | 00659 55 
03 | 00660 03 
01 | 00661 01 end                           | end
91 | 00662 91 push_v ushort 95              | push baseNode:ushort
5f | 00663 5f 
91 | 00664 91 push_v ushort 93              | push nodeId:ushort
5d | 00665 5d 
10 | 00666 10 neq                           | neq
4f | 00667 4f ifelse 115 116                | ifelse True_115 EndIf_116
02 | 00668 .00 addr:672
a0 | 00669 .73 
02 | 00670 .00 addr:718
ce | 00671 .74 
d1 | 00672 d1 set_c ushort 62 109           | await CUSTOM_A[0]
3e | 00673 3e 
02 | 00674 .00 addr:677
a5 | 00675 .6d 
01 | 00676 01 end                           | end
41 | 00677 41 push_c 0xfffe                 | push 0xfffe
ff | 00678 ff 
fe | 00679 fe 
91 | 00680 91 push_v ushort 99              | push father:ushort
63 | 00681 63 
0f | 00682 0f eq                            | eq
4f | 00683 4f ifelse 113 114                | ifelse True_113 EndIf_114
02 | 00684 .00 addr:688
b0 | 00685 .71 
02 | 00686 .00 addr:672
a0 | 00687 .6a 
c0 | 00688 c0 set_c ubyte 105 3             | msgTopo.type = 3
69 | 00689 69 
03 | 00690 03 
2a | 00691 2a set_v ushort 106 ushort 93    | msgTopo.source = nodeId
11 | 00692 11 
6a | 00693 6a 
5d | 00694 5d 
d1 | 00695 d1 set_c ushort 108 0xffff       | msgTopo.target = 0xffff
6c | 00696 6c 
ff | 00697 ff 
ff | 00698 ff 
40 | 00699 40 push_c 101                    | push &seqReq
65 | 00700 65 
61 | 00701 61 inc ushort                    | inc ushort
2a | 00702 2a set_v ushort 116 ushort 101   | msgTopo.d16_2 = seqReq
11 | 00703 11 
74 | 00704 74 
65 | 00705 65 
40 | 00706 40 push_c 105                    | push_c &msgTopo:usrMsg2_t
69 | 00707 69 
24 | 00708 24 func 10                       | func qPut
0a | 00709 0a 
a0 | 00710 a0 pop ubyte 97                  | pop stat
61 | 00711 61 
39 | 00712 39 exec 114                      | goto  114
02 | 00713 .00 addr:672
a0 | 00714 .6a 
48 | 00715 48 memclr 62 2                   | clear EXT gates for CUSTOM_A[0]
3e | 00716 3e 
02 | 00717 02 
01 | 00718 01 end                           | end
c0 | 00719 c0 set_c ubyte 180 1             | ack = 1
b4 | 00720 b4 
01 | 00721 01 
c0 | 00722 c0 set_c ubyte 181 0             | reply = 0
b5 | 00723 b5 
00 | 00724 00 
d1 | 00725 d1 set_c ushort 90 122           | await Q_READY[0]
5a | 00726 5a 
02 | 00727 .00 addr:730
da | 00728 .7a 
01 | 00729 01 end                           | end
40 | 00730 40 push_c 0                      | push 0
00 | 00731 00 
24 | 00732 24 func 12                       | func qSize
0c | 00733 0c 
13 | 00734 13 gt                            | gt
4f | 00735 4f ifelse 155 156                | ifelse True_155 False_156
02 | 00736 .00 addr:740
e4 | 00737 .9b 
03 | 00738 .00 addr:862
5e | 00739 .9c 
c0 | 00740 c0 set_c ubyte 181 0             | reply = 0
b5 | 00741 b5 
00 | 00742 00 
40 | 00743 40 push_c 130                    | push_c &msgRadio:usrMsg2_t
82 | 00744 82 
24 | 00745 24 func 11                       | func qGet
0b | 00746 0b 
a0 | 00747 a0 pop ubyte 97                  | pop stat
61 | 00748 61 
40 | 00749 40 push_c 0                      | push 0
00 | 00750 00 
91 | 00751 91 push_v ushort 133                    | push msgRadio.target [Optm:: push_c addr + deref]
85 | 00752 85 
0f | 00753 0f eq                            | eq
41 | 00754 41 push_c 0xffff                 | push 0xffff
ff | 00755 ff 
ff | 00756 ff 
91 | 00757 91 push_v ushort 133                    | push msgRadio.target [Optm:: push_c addr + deref]
85 | 00758 85 
0f | 00759 0f eq                            | eq
15 | 00760 15 lor                           | lor
4f | 00761 4f ifelse 152 153                | ifelse True_152 False_153
02 | 00762 .00 addr:766
fe | 00763 .98 
03 | 00764 .00 addr:778
0a | 00765 .99 
b1 | 00766 b1 outevt_v 40 130               | emit SEND len=25 var=msgRadio
28 | 00767 28 
82 | 00768 82 
90 | 00769 90 push_v ubyte 130                    | push msgRadio.type [Optm:: push_c addr + deref]
82 | 00770 82 
a0 | 00771 a0 pop ubyte 66                  | evt SEND_DONE() auxId = pop
42 | 00772 42 
d1 | 00773 d1 set_c ushort 67 132           | await SEND_DONE()[0]
43 | 00774 43 
02 | 00775 .00 addr:730
da | 00776 .7b 
01 | 00777 01 end                           | end
90 | 00778 90 push_v ubyte 181              | push reply:ubyte
b5 | 00779 b5 
90 | 00780 90 push_v ubyte 135                    | push msgRadio.d8_1 [Optm:: push_c addr + deref]
87 | 00781 87 
06 | 00782 06 add                           | add
a0 | 00783 a0 pop ubyte 135                 | pop msgRadio.d8_1
87 | 00784 87 
b1 | 00785 b1 outevt_v 41 130               | emit SEND_ACK len=25 var=msgRadio
29 | 00786 29 
82 | 00787 82 
90 | 00788 90 push_v ubyte 130                    | push msgRadio.type [Optm:: push_c addr + deref]
82 | 00789 82 
a0 | 00790 a0 pop ubyte 71                  | evt SEND_DONE_ACK() auxId = pop
47 | 00791 47 
d1 | 00792 d1 set_c ushort 72 142           | await SEND_DONE_ACK()[0]
48 | 00793 48 
03 | 00794 .00 addr:797
1d | 00795 .8e 
01 | 00796 01 end                           | end
5c | 00797 5c getextdt_v 180 1              | getExtData ack 1
b4 | 00798 b4 
01 | 00799 01 
40 | 00800 40 push_c 181                    | push &reply
b5 | 00801 b5 
60 | 00802 60 inc ubyte                     | inc ubyte
40 | 00803 40 push_c 20                     | push 20
14 | 00804 14 
90 | 00805 90 push_v ubyte 181              | push reply:ubyte
b5 | 00806 b5 
13 | 00807 13 gt                            | gt
4f | 00808 4f ifelse 146 147                | ifelse True_146 EndIf_147
03 | 00809 .00 addr:813
2d | 00810 .92 
03 | 00811 .00 addr:828
3c | 00812 .93 
d1 | 00813 d1 set_c ushort 99 0xfffe        | father = 0xfffe
63 | 00814 63 
ff | 00815 ff 
fe | 00816 fe 
58 | 00817 58 outevt_c 20 1                 | emit REQ_CUSTOM_A len=1 const=1
14 | 00818 14 
01 | 00819 01 
3d | 00820 3d tkins_z 1 17 135              | insert track Loop_out_135 tree 17
91 | 00821 91 
03 | 00822 .00 addr:853
55 | 00823 .87 
01 | 00824 01 end                           | end
39 | 00825 39 exec 147                      | goto  147
03 | 00826 .00 addr:828
3c | 00827 .93 
40 | 00828 40 push_c 1                      | push 1
01 | 00829 01 
90 | 00830 90 push_v ubyte 180              | push ack:ubyte
b4 | 00831 b4 
0f | 00832 0f eq                            | eq
4f | 00833 4f ifelse 149 150                | ifelse True_149 EndIf_150
03 | 00834 .00 addr:838
46 | 00835 .95 
03 | 00836 .00 addr:846
4e | 00837 .96 
3d | 00838 3d tkins_z 1 17 135              | insert track Loop_out_135 tree 17
91 | 00839 91 
03 | 00840 .00 addr:853
55 | 00841 .87 
01 | 00842 01 end                           | end
39 | 00843 39 exec 150                      | goto  150
03 | 00844 .00 addr:846
4e | 00845 .96 
29 | 00846 29 clken_c 6 50 151              | clock enable Awake_50_151 50msec
01 | 00847 01 
06 | 00848 06 
32 | 00849 32 
03 | 00850 .00 addr:778
0a | 00851 .85 
01 | 00852 01 end                           | end
48 | 00853 48 memclr 48 8                   | clear WClocks gates from 6 to 7
30 | 00854 30 
08 | 00855 08 
48 | 00856 48 memclr 71 3                   | clear EXT gates for SEND_DONE_ACK()[0]
47 | 00857 47 
03 | 00858 03 
39 | 00859 39 exec 154                      | goto  154
02 | 00860 .00 addr:730
da | 00861 .7b 
3d | 00862 3d tkins_z 1 10 125              | insert track Loop_out_125 tree 10
8a | 00863 8a 
03 | 00864 .00 addr:870
66 | 00865 .7d 
01 | 00866 01 end                           | end
39 | 00867 39 exec 157                      | goto  157
02 | 00868 .00 addr:730
da | 00869 .7b 
48 | 00870 48 memclr 48 8                   | clear WClocks gates from 6 to 7
30 | 00871 30 
08 | 00872 08 
48 | 00873 48 memclr 66 3                   | clear EXT gates for SEND_DONE()[0]
42 | 00874 42 
03 | 00875 03 
48 | 00876 48 memclr 71 3                   | clear EXT gates for SEND_DONE_ACK()[0]
47 | 00877 47 
03 | 00878 03 
39 | 00879 39 exec 119                      | goto  119
02 | 00880 .00 addr:725
d5 | 00881 .77 
48 | 00882 48 memclr 48 8                   | clear WClocks gates from 6 to 7
30 | 00883 30 
08 | 00884 08 
48 | 00885 48 memclr 66 3                   | clear EXT gates for SEND_DONE()[0]
42 | 00886 42 
03 | 00887 03 
48 | 00888 48 memclr 71 3                   | clear EXT gates for SEND_DONE_ACK()[0]
47 | 00889 47 
03 | 00890 03 
48 | 00891 48 memclr 90 2                   | clear EXT gates for Q_READY[0]
5a | 00892 5a 
02 | 00893 02 
01 | 00894 01 end                           | end
48 | 00895 48 memclr 0 56                   | clear WClocks gates from 0 to 7
00 | 00896 00 
38 | 00897 38 
01 | 00898 01 end                           | end
