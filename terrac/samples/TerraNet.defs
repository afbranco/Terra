/*{-{*/
#ifndef _TERRANET_
#define _TERRANET_
config 00.01.00 do

/*
 * Define constants
 */

// Boolean
#define TRUE 1
#define FALSE 0
// Leds Constants
#define ON 1
#define OFF 0
#define TOGGLE 2
// Interrupt config
#define RISING 1
#define FALLING 0
#define DISABLE 2
// Port Cfg
#define pIN 0
#define pOUT 1
// Message
#define BROADCAST 0xffff


/*
 * Define custom registers
 */

	// usrMsg_t - Radio/Queue Data Message Register
	regtype usrMsg_t with
		var ubyte type;
		var ushort source;
		var ushort target;
		var ubyte[20] data;
	end

	// Alternative fixed values data message
	regtype usrMsg2_t with
		var ubyte type;
		var ushort source;
		var ushort target;
		var ubyte d8_1;
		var ubyte d8_2;
		var ubyte d8_3;
		var ubyte d8_4;
		var ushort d16_1;
		var ushort d16_2;
		var ushort d16_3;
		var ushort d16_4;
		var ulong d32_1;
		var ulong d32_2;
	end

	// TerraNet local Output events
	output ubyte		INIT			0;
	output ubyte		LEDS			5;
	output ubyte		LED0			6;
	output ubyte		LED1			7;
	output ubyte		LED2			8;
	output void			REQ_TEMP		9;
	output void			REQ_PHOTO		10;
	output void			REQ_VOLTS		11;
	output ubyte		SET_PORT_A		12;
	output ubyte		SET_PORT_B		13;
	output ubyte 		CFG_PORT_A		14;
	output ubyte 		CFG_PORT_B		15;
	output ubyte 		REQ_PORT_A		16;
	output ubyte 		REQ_PORT_B		17;
	output ubyte 		CFG_INT_A		18;
	output ubyte 		CFG_INT_B		19;
	output ubyte 		REQ_CUSTOM_A	20;
	// TerraNet Custom Output events
	output usrMsg_t 	SEND			40;
	output usrMsg_t 	SEND_ACK		41;

	// TerraNet Local Input events
	input ubyte 	ERROR 			0;
	input ushort 	TEMP 			5;
	input ushort 	PHOTO 			6;
	input ushort	VOLTS 			7;
	input ubyte 	PORT_A 			8;
	input ubyte 	PORT_B 			9;
	input ubyte 	INT_A 			10;
	input ubyte 	INT_B 			11;
	input ubyte 	CUSTOM_A 		12;
	// TerraNet Custom Input events
	input ushort 	SEND_DONE 		40;
	input ubyte 	SEND_DONE_ACK	41
	input usrMsg_t	RECEIVE 		42;
	input ubyte 	Q_READY 		43;

	// Terra basic functions
	function pure ushort getNodeId()		0;
	function pure ushort random()			1;
	// TerraNet custom functions
	function nohold ubyte qPut(usrMsg_t*) 	10;
	function nohold ubyte qGet(usrMsg_t*) 	11;
	function pure ubyte qSize()				12;
	function pure ubyte qClear()			13;

// Request/await macros
#define getTemp(var)  emit REQ_TEMP();  var=await TEMP 
#define getPhoto(var) emit REQ_PHOTO(); var=await PHOTO 
#define getVolts(var) emit REQ_VOLTS(); var=await VOLTS 
// await/until macro
#define await_until(ret,evt,cond) loop do ret = await evt; if cond then break; end end

end
#endif
/*}-}*/
